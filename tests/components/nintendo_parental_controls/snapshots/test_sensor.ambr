# serializer version: 1
# name: test_number[sensor.home_assistant_test_screen_time_remaining-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.home_assistant_test_screen_time_remaining',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.DURATION: 'duration'>,
    'original_icon': None,
    'original_name': 'Screen time remaining',
    'platform': 'nintendo_parental_controls',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': <NintendoParentalControlsSensor.TIME_REMAINING: 'time_remaining'>,
    'unique_id': 'testdevid_time_remaining',
    'unit_of_measurement': <UnitOfTime.MINUTES: 'min'>,
  })
# ---
# name: test_number[sensor.home_assistant_test_screen_time_remaining-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'duration',
      'friendly_name': 'Home Assistant Test Screen time remaining',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTime.MINUTES: 'min'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.home_assistant_test_screen_time_remaining',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '10',
  })
# ---
# name: test_number[sensor.home_assistant_test_used_screen_time-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.home_assistant_test_used_screen_time',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.DURATION: 'duration'>,
    'original_icon': None,
    'original_name': 'Used screen time',
    'platform': 'nintendo_parental_controls',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': <NintendoParentalControlsSensor.PLAYING_TIME: 'playing_time'>,
    'unique_id': 'testdevid_playing_time',
    'unit_of_measurement': <UnitOfTime.MINUTES: 'min'>,
  })
# ---
# name: test_number[sensor.home_assistant_test_used_screen_time-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'duration',
      'friendly_name': 'Home Assistant Test Used screen time',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfTime.MINUTES: 'min'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.home_assistant_test_used_screen_time',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '110',
  })
# ---

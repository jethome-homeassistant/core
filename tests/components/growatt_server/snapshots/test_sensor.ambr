# serializer version: 1
# name: test_all_sensors[sensor.min123456_ac_frequency-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.min123456_ac_frequency',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 0,
      }),
    }),
    'original_device_class': <SensorDeviceClass.FREQUENCY: 'frequency'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'AC frequency',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'tlx_frequency',
    'unique_id': 'MIN123456-tlx_frequency',
    'unit_of_measurement': <UnitOfFrequency.HERTZ: 'Hz'>,
  })
# ---
# name: test_all_sensors[sensor.min123456_ac_frequency-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'frequency',
      'friendly_name': 'MIN123456 AC frequency',
      'icon': 'mdi:solar-power',
      'unit_of_measurement': <UnitOfFrequency.HERTZ: 'Hz'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.min123456_ac_frequency',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_all_sensors[sensor.min123456_all_batteries_charged_today-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.min123456_all_batteries_charged_today',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'All batteries charged today',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'tlx_all_batteries_charge_today',
    'unique_id': 'MIN123456-tlx_all_batteries_charge_today',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_all_sensors[sensor.min123456_all_batteries_charged_today-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'MIN123456 All batteries charged today',
      'icon': 'mdi:solar-power',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.min123456_all_batteries_charged_today',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_all_sensors[sensor.min123456_all_batteries_discharged_today-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.min123456_all_batteries_discharged_today',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'All batteries discharged today',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'tlx_all_batteries_discharge_today',
    'unique_id': 'MIN123456-tlx_all_batteries_discharge_today',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_all_sensors[sensor.min123456_all_batteries_discharged_today-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'MIN123456 All batteries discharged today',
      'icon': 'mdi:solar-power',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.min123456_all_batteries_discharged_today',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_all_sensors[sensor.min123456_batteries_charged_from_grid_today-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.min123456_batteries_charged_from_grid_today',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Batteries charged from grid today',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'tlx_batteries_charged_from_grid_today',
    'unique_id': 'MIN123456-tlx_batteries_charged_from_grid_today',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_all_sensors[sensor.min123456_batteries_charged_from_grid_today-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'MIN123456 Batteries charged from grid today',
      'icon': 'mdi:solar-power',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.min123456_batteries_charged_from_grid_today',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_all_sensors[sensor.min123456_battery_1_charging_w-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.min123456_battery_1_charging_w',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 0,
      }),
    }),
    'original_device_class': <SensorDeviceClass.POWER: 'power'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Battery 1 charging W',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'tlx_battery_1_charge_w',
    'unique_id': 'MIN123456-tlx_battery_1_charge_w',
    'unit_of_measurement': <UnitOfPower.WATT: 'W'>,
  })
# ---
# name: test_all_sensors[sensor.min123456_battery_1_charging_w-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'power',
      'friendly_name': 'MIN123456 Battery 1 charging W',
      'icon': 'mdi:solar-power',
      'unit_of_measurement': <UnitOfPower.WATT: 'W'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.min123456_battery_1_charging_w',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_all_sensors[sensor.min123456_battery_1_discharging_w-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.min123456_battery_1_discharging_w',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 0,
      }),
    }),
    'original_device_class': <SensorDeviceClass.POWER: 'power'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Battery 1 discharging W',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'tlx_battery_1_discharge_w',
    'unique_id': 'MIN123456-tlx_battery_1_discharge_w',
    'unit_of_measurement': <UnitOfPower.WATT: 'W'>,
  })
# ---
# name: test_all_sensors[sensor.min123456_battery_1_discharging_w-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'power',
      'friendly_name': 'MIN123456 Battery 1 discharging W',
      'icon': 'mdi:solar-power',
      'unit_of_measurement': <UnitOfPower.WATT: 'W'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.min123456_battery_1_discharging_w',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_all_sensors[sensor.min123456_battery_2_charging_w-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.min123456_battery_2_charging_w',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 0,
      }),
    }),
    'original_device_class': <SensorDeviceClass.POWER: 'power'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Battery 2 charging W',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'tlx_battery_2_charge_w',
    'unique_id': 'MIN123456-tlx_battery_2_charge_w',
    'unit_of_measurement': <UnitOfPower.WATT: 'W'>,
  })
# ---
# name: test_all_sensors[sensor.min123456_battery_2_charging_w-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'power',
      'friendly_name': 'MIN123456 Battery 2 charging W',
      'icon': 'mdi:solar-power',
      'unit_of_measurement': <UnitOfPower.WATT: 'W'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.min123456_battery_2_charging_w',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_all_sensors[sensor.min123456_battery_2_discharging_w-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.min123456_battery_2_discharging_w',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 0,
      }),
    }),
    'original_device_class': <SensorDeviceClass.POWER: 'power'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Battery 2 discharging W',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'tlx_battery_2_discharge_w',
    'unique_id': 'MIN123456-tlx_battery_2_discharge_w',
    'unit_of_measurement': <UnitOfPower.WATT: 'W'>,
  })
# ---
# name: test_all_sensors[sensor.min123456_battery_2_discharging_w-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'power',
      'friendly_name': 'MIN123456 Battery 2 discharging W',
      'icon': 'mdi:solar-power',
      'unit_of_measurement': <UnitOfPower.WATT: 'W'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.min123456_battery_2_discharging_w',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_all_sensors[sensor.min123456_energy_today-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.min123456_energy_today',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Energy today',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'tlx_energy_today',
    'unique_id': 'MIN123456-tlx_energy_today',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_all_sensors[sensor.min123456_energy_today-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'MIN123456 Energy today',
      'icon': 'mdi:solar-power',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.min123456_energy_today',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_all_sensors[sensor.min123456_energy_today_input_1-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.min123456_energy_today_input_1',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Energy today input 1',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'tlx_energy_today_input_1',
    'unique_id': 'MIN123456-tlx_energy_today_input_1',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_all_sensors[sensor.min123456_energy_today_input_1-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'MIN123456 Energy today input 1',
      'icon': 'mdi:solar-power',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.min123456_energy_today_input_1',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_all_sensors[sensor.min123456_energy_today_input_2-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.min123456_energy_today_input_2',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Energy today input 2',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'tlx_energy_today_input_2',
    'unique_id': 'MIN123456-tlx_energy_today_input_2',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_all_sensors[sensor.min123456_energy_today_input_2-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'MIN123456 Energy today input 2',
      'icon': 'mdi:solar-power',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.min123456_energy_today_input_2',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_all_sensors[sensor.min123456_energy_today_input_3-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.min123456_energy_today_input_3',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Energy today input 3',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'tlx_energy_today_input_3',
    'unique_id': 'MIN123456-tlx_energy_today_input_3',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_all_sensors[sensor.min123456_energy_today_input_3-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'MIN123456 Energy today input 3',
      'icon': 'mdi:solar-power',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.min123456_energy_today_input_3',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_all_sensors[sensor.min123456_energy_today_input_4-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.min123456_energy_today_input_4',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Energy today input 4',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'tlx_energy_today_input_4',
    'unique_id': 'MIN123456-tlx_energy_today_input_4',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_all_sensors[sensor.min123456_energy_today_input_4-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'MIN123456 Energy today input 4',
      'icon': 'mdi:solar-power',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.min123456_energy_today_input_4',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_all_sensors[sensor.min123456_export_power-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.min123456_export_power',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 0,
      }),
    }),
    'original_device_class': <SensorDeviceClass.POWER: 'power'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Export power',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'tlx_pac_to_grid_total',
    'unique_id': 'MIN123456-tlx_pac_to_grid_total',
    'unit_of_measurement': <UnitOfPower.WATT: 'W'>,
  })
# ---
# name: test_all_sensors[sensor.min123456_export_power-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'power',
      'friendly_name': 'MIN123456 Export power',
      'icon': 'mdi:solar-power',
      'unit_of_measurement': <UnitOfPower.WATT: 'W'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.min123456_export_power',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_all_sensors[sensor.min123456_export_to_grid_today-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.min123456_export_to_grid_today',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Export to grid today',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'tlx_export_to_grid_today',
    'unique_id': 'MIN123456-tlx_export_to_grid_today',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_all_sensors[sensor.min123456_export_to_grid_today-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'MIN123456 Export to grid today',
      'icon': 'mdi:solar-power',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.min123456_export_to_grid_today',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_all_sensors[sensor.min123456_import_from_grid_today-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.min123456_import_from_grid_today',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Import from grid today',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'tlx_import_from_grid_today',
    'unique_id': 'MIN123456-tlx_import_from_grid_today',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_all_sensors[sensor.min123456_import_from_grid_today-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'MIN123456 Import from grid today',
      'icon': 'mdi:solar-power',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.min123456_import_from_grid_today',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_all_sensors[sensor.min123456_import_power-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.min123456_import_power',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 0,
      }),
    }),
    'original_device_class': <SensorDeviceClass.POWER: 'power'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Import power',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'tlx_pac_to_user_total',
    'unique_id': 'MIN123456-tlx_pac_to_user_total',
    'unit_of_measurement': <UnitOfPower.WATT: 'W'>,
  })
# ---
# name: test_all_sensors[sensor.min123456_import_power-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'power',
      'friendly_name': 'MIN123456 Import power',
      'icon': 'mdi:solar-power',
      'unit_of_measurement': <UnitOfPower.WATT: 'W'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.min123456_import_power',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_all_sensors[sensor.min123456_input_1_amperage-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.min123456_input_1_amperage',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.CURRENT: 'current'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Input 1 amperage',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'tlx_amperage_input_1',
    'unique_id': 'MIN123456-tlx_amperage_input_1',
    'unit_of_measurement': <UnitOfElectricCurrent.AMPERE: 'A'>,
  })
# ---
# name: test_all_sensors[sensor.min123456_input_1_amperage-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'current',
      'friendly_name': 'MIN123456 Input 1 amperage',
      'icon': 'mdi:solar-power',
      'unit_of_measurement': <UnitOfElectricCurrent.AMPERE: 'A'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.min123456_input_1_amperage',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_all_sensors[sensor.min123456_input_1_voltage-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.min123456_input_1_voltage',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 0,
      }),
    }),
    'original_device_class': <SensorDeviceClass.VOLTAGE: 'voltage'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Input 1 voltage',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'tlx_voltage_input_1',
    'unique_id': 'MIN123456-tlx_voltage_input_1',
    'unit_of_measurement': <UnitOfElectricPotential.VOLT: 'V'>,
  })
# ---
# name: test_all_sensors[sensor.min123456_input_1_voltage-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'voltage',
      'friendly_name': 'MIN123456 Input 1 voltage',
      'icon': 'mdi:solar-power',
      'unit_of_measurement': <UnitOfElectricPotential.VOLT: 'V'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.min123456_input_1_voltage',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_all_sensors[sensor.min123456_input_1_wattage-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.min123456_input_1_wattage',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 0,
      }),
    }),
    'original_device_class': <SensorDeviceClass.POWER: 'power'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Input 1 wattage',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'tlx_wattage_input_1',
    'unique_id': 'MIN123456-tlx_wattage_input_1',
    'unit_of_measurement': <UnitOfPower.WATT: 'W'>,
  })
# ---
# name: test_all_sensors[sensor.min123456_input_1_wattage-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'power',
      'friendly_name': 'MIN123456 Input 1 wattage',
      'icon': 'mdi:solar-power',
      'unit_of_measurement': <UnitOfPower.WATT: 'W'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.min123456_input_1_wattage',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_all_sensors[sensor.min123456_input_2_amperage-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.min123456_input_2_amperage',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.CURRENT: 'current'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Input 2 amperage',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'tlx_amperage_input_2',
    'unique_id': 'MIN123456-tlx_amperage_input_2',
    'unit_of_measurement': <UnitOfElectricCurrent.AMPERE: 'A'>,
  })
# ---
# name: test_all_sensors[sensor.min123456_input_2_amperage-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'current',
      'friendly_name': 'MIN123456 Input 2 amperage',
      'icon': 'mdi:solar-power',
      'unit_of_measurement': <UnitOfElectricCurrent.AMPERE: 'A'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.min123456_input_2_amperage',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_all_sensors[sensor.min123456_input_2_voltage-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.min123456_input_2_voltage',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 0,
      }),
    }),
    'original_device_class': <SensorDeviceClass.VOLTAGE: 'voltage'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Input 2 voltage',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'tlx_voltage_input_2',
    'unique_id': 'MIN123456-tlx_voltage_input_2',
    'unit_of_measurement': <UnitOfElectricPotential.VOLT: 'V'>,
  })
# ---
# name: test_all_sensors[sensor.min123456_input_2_voltage-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'voltage',
      'friendly_name': 'MIN123456 Input 2 voltage',
      'icon': 'mdi:solar-power',
      'unit_of_measurement': <UnitOfElectricPotential.VOLT: 'V'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.min123456_input_2_voltage',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_all_sensors[sensor.min123456_input_2_wattage-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.min123456_input_2_wattage',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 0,
      }),
    }),
    'original_device_class': <SensorDeviceClass.POWER: 'power'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Input 2 wattage',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'tlx_wattage_input_2',
    'unique_id': 'MIN123456-tlx_wattage_input_2',
    'unit_of_measurement': <UnitOfPower.WATT: 'W'>,
  })
# ---
# name: test_all_sensors[sensor.min123456_input_2_wattage-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'power',
      'friendly_name': 'MIN123456 Input 2 wattage',
      'icon': 'mdi:solar-power',
      'unit_of_measurement': <UnitOfPower.WATT: 'W'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.min123456_input_2_wattage',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_all_sensors[sensor.min123456_input_3_amperage-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.min123456_input_3_amperage',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.CURRENT: 'current'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Input 3 amperage',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'tlx_amperage_input_3',
    'unique_id': 'MIN123456-tlx_amperage_input_3',
    'unit_of_measurement': <UnitOfElectricCurrent.AMPERE: 'A'>,
  })
# ---
# name: test_all_sensors[sensor.min123456_input_3_amperage-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'current',
      'friendly_name': 'MIN123456 Input 3 amperage',
      'icon': 'mdi:solar-power',
      'unit_of_measurement': <UnitOfElectricCurrent.AMPERE: 'A'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.min123456_input_3_amperage',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_all_sensors[sensor.min123456_input_3_voltage-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.min123456_input_3_voltage',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 0,
      }),
    }),
    'original_device_class': <SensorDeviceClass.VOLTAGE: 'voltage'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Input 3 voltage',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'tlx_voltage_input_3',
    'unique_id': 'MIN123456-tlx_voltage_input_3',
    'unit_of_measurement': <UnitOfElectricPotential.VOLT: 'V'>,
  })
# ---
# name: test_all_sensors[sensor.min123456_input_3_voltage-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'voltage',
      'friendly_name': 'MIN123456 Input 3 voltage',
      'icon': 'mdi:solar-power',
      'unit_of_measurement': <UnitOfElectricPotential.VOLT: 'V'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.min123456_input_3_voltage',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_all_sensors[sensor.min123456_input_3_wattage-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.min123456_input_3_wattage',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 0,
      }),
    }),
    'original_device_class': <SensorDeviceClass.POWER: 'power'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Input 3 wattage',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'tlx_wattage_input_3',
    'unique_id': 'MIN123456-tlx_wattage_input_3',
    'unit_of_measurement': <UnitOfPower.WATT: 'W'>,
  })
# ---
# name: test_all_sensors[sensor.min123456_input_3_wattage-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'power',
      'friendly_name': 'MIN123456 Input 3 wattage',
      'icon': 'mdi:solar-power',
      'unit_of_measurement': <UnitOfPower.WATT: 'W'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.min123456_input_3_wattage',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_all_sensors[sensor.min123456_input_4_amperage-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.min123456_input_4_amperage',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.CURRENT: 'current'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Input 4 amperage',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'tlx_amperage_input_4',
    'unique_id': 'MIN123456-tlx_amperage_input_4',
    'unit_of_measurement': <UnitOfElectricCurrent.AMPERE: 'A'>,
  })
# ---
# name: test_all_sensors[sensor.min123456_input_4_amperage-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'current',
      'friendly_name': 'MIN123456 Input 4 amperage',
      'icon': 'mdi:solar-power',
      'unit_of_measurement': <UnitOfElectricCurrent.AMPERE: 'A'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.min123456_input_4_amperage',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_all_sensors[sensor.min123456_input_4_voltage-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.min123456_input_4_voltage',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 0,
      }),
    }),
    'original_device_class': <SensorDeviceClass.VOLTAGE: 'voltage'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Input 4 voltage',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'tlx_voltage_input_4',
    'unique_id': 'MIN123456-tlx_voltage_input_4',
    'unit_of_measurement': <UnitOfElectricPotential.VOLT: 'V'>,
  })
# ---
# name: test_all_sensors[sensor.min123456_input_4_voltage-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'voltage',
      'friendly_name': 'MIN123456 Input 4 voltage',
      'icon': 'mdi:solar-power',
      'unit_of_measurement': <UnitOfElectricPotential.VOLT: 'V'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.min123456_input_4_voltage',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_all_sensors[sensor.min123456_input_4_wattage-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.min123456_input_4_wattage',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 0,
      }),
    }),
    'original_device_class': <SensorDeviceClass.POWER: 'power'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Input 4 wattage',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'tlx_wattage_input_4',
    'unique_id': 'MIN123456-tlx_wattage_input_4',
    'unit_of_measurement': <UnitOfPower.WATT: 'W'>,
  })
# ---
# name: test_all_sensors[sensor.min123456_input_4_wattage-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'power',
      'friendly_name': 'MIN123456 Input 4 wattage',
      'icon': 'mdi:solar-power',
      'unit_of_measurement': <UnitOfPower.WATT: 'W'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.min123456_input_4_wattage',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_all_sensors[sensor.min123456_internal_wattage-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.min123456_internal_wattage',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 0,
      }),
    }),
    'original_device_class': <SensorDeviceClass.POWER: 'power'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Internal wattage',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'tlx_internal_wattage',
    'unique_id': 'MIN123456-tlx_internal_wattage',
    'unit_of_measurement': <UnitOfPower.WATT: 'W'>,
  })
# ---
# name: test_all_sensors[sensor.min123456_internal_wattage-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'power',
      'friendly_name': 'MIN123456 Internal wattage',
      'icon': 'mdi:solar-power',
      'unit_of_measurement': <UnitOfPower.WATT: 'W'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.min123456_internal_wattage',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_all_sensors[sensor.min123456_lifetime_batteries_charged_from_grid-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.min123456_lifetime_batteries_charged_from_grid',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Lifetime batteries charged from grid',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'tlx_batteries_charged_from_grid_total',
    'unique_id': 'MIN123456-tlx_batteries_charged_from_grid_total',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_all_sensors[sensor.min123456_lifetime_batteries_charged_from_grid-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'MIN123456 Lifetime batteries charged from grid',
      'icon': 'mdi:solar-power',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.min123456_lifetime_batteries_charged_from_grid',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_all_sensors[sensor.min123456_lifetime_energy_output-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.min123456_lifetime_energy_output',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Lifetime energy output',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'tlx_energy_total',
    'unique_id': 'MIN123456-tlx_energy_total',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_all_sensors[sensor.min123456_lifetime_energy_output-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'MIN123456 Lifetime energy output',
      'icon': 'mdi:solar-power',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.min123456_lifetime_energy_output',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_all_sensors[sensor.min123456_lifetime_import_from_grid-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.min123456_lifetime_import_from_grid',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Lifetime import from grid',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'tlx_import_from_grid_total',
    'unique_id': 'MIN123456-tlx_import_from_grid_total',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_all_sensors[sensor.min123456_lifetime_import_from_grid-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'MIN123456 Lifetime import from grid',
      'icon': 'mdi:solar-power',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.min123456_lifetime_import_from_grid',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_all_sensors[sensor.min123456_lifetime_self_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.min123456_lifetime_self_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Lifetime self consumption',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'tlx_self_consumption_total',
    'unique_id': 'MIN123456-tlx_self_consumption_total',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_all_sensors[sensor.min123456_lifetime_self_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'MIN123456 Lifetime self consumption',
      'icon': 'mdi:solar-power',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.min123456_lifetime_self_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_all_sensors[sensor.min123456_lifetime_system_production-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.min123456_lifetime_system_production',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Lifetime system production',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'tlx_system_production_total',
    'unique_id': 'MIN123456-tlx_system_production_total',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_all_sensors[sensor.min123456_lifetime_system_production-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'MIN123456 Lifetime system production',
      'icon': 'mdi:solar-power',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.min123456_lifetime_system_production',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_all_sensors[sensor.min123456_lifetime_total_all_batteries_charged-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.min123456_lifetime_total_all_batteries_charged',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Lifetime total all batteries charged',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'tlx_all_batteries_charge_total',
    'unique_id': 'MIN123456-tlx_all_batteries_charge_total',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_all_sensors[sensor.min123456_lifetime_total_all_batteries_charged-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'MIN123456 Lifetime total all batteries charged',
      'icon': 'mdi:solar-power',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.min123456_lifetime_total_all_batteries_charged',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_all_sensors[sensor.min123456_lifetime_total_all_batteries_discharged-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.min123456_lifetime_total_all_batteries_discharged',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Lifetime total all batteries discharged',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'tlx_all_batteries_discharge_total',
    'unique_id': 'MIN123456-tlx_all_batteries_discharge_total',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_all_sensors[sensor.min123456_lifetime_total_all_batteries_discharged-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'MIN123456 Lifetime total all batteries discharged',
      'icon': 'mdi:solar-power',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.min123456_lifetime_total_all_batteries_discharged',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_all_sensors[sensor.min123456_lifetime_total_battery_1_charged-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.min123456_lifetime_total_battery_1_charged',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Lifetime total battery 1 charged',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'tlx_battery_1_charge_total',
    'unique_id': 'MIN123456-tlx_battery_1_charge_total',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_all_sensors[sensor.min123456_lifetime_total_battery_1_charged-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'MIN123456 Lifetime total battery 1 charged',
      'icon': 'mdi:solar-power',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.min123456_lifetime_total_battery_1_charged',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_all_sensors[sensor.min123456_lifetime_total_battery_1_discharged-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.min123456_lifetime_total_battery_1_discharged',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Lifetime total battery 1 discharged',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'tlx_battery_1_discharge_total',
    'unique_id': 'MIN123456-tlx_battery_1_discharge_total',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_all_sensors[sensor.min123456_lifetime_total_battery_1_discharged-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'MIN123456 Lifetime total battery 1 discharged',
      'icon': 'mdi:solar-power',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.min123456_lifetime_total_battery_1_discharged',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_all_sensors[sensor.min123456_lifetime_total_battery_2_charged-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.min123456_lifetime_total_battery_2_charged',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Lifetime total battery 2 charged',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'tlx_battery_2_charge_total',
    'unique_id': 'MIN123456-tlx_battery_2_charge_total',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_all_sensors[sensor.min123456_lifetime_total_battery_2_charged-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'MIN123456 Lifetime total battery 2 charged',
      'icon': 'mdi:solar-power',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.min123456_lifetime_total_battery_2_charged',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_all_sensors[sensor.min123456_lifetime_total_battery_2_discharged-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.min123456_lifetime_total_battery_2_discharged',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Lifetime total battery 2 discharged',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'tlx_battery_2_discharge_total',
    'unique_id': 'MIN123456-tlx_battery_2_discharge_total',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_all_sensors[sensor.min123456_lifetime_total_battery_2_discharged-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'MIN123456 Lifetime total battery 2 discharged',
      'icon': 'mdi:solar-power',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.min123456_lifetime_total_battery_2_discharged',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_all_sensors[sensor.min123456_lifetime_total_energy_input_1-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.min123456_lifetime_total_energy_input_1',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Lifetime total energy input 1',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'tlx_energy_total_input_1',
    'unique_id': 'MIN123456-tlx_energy_total_input_1',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_all_sensors[sensor.min123456_lifetime_total_energy_input_1-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'MIN123456 Lifetime total energy input 1',
      'icon': 'mdi:solar-power',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.min123456_lifetime_total_energy_input_1',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_all_sensors[sensor.min123456_lifetime_total_energy_input_2-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.min123456_lifetime_total_energy_input_2',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Lifetime total energy input 2',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'tlx_energy_total_input_2',
    'unique_id': 'MIN123456-tlx_energy_total_input_2',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_all_sensors[sensor.min123456_lifetime_total_energy_input_2-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'MIN123456 Lifetime total energy input 2',
      'icon': 'mdi:solar-power',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.min123456_lifetime_total_energy_input_2',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_all_sensors[sensor.min123456_lifetime_total_energy_input_3-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.min123456_lifetime_total_energy_input_3',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Lifetime total energy input 3',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'tlx_energy_total_input_3',
    'unique_id': 'MIN123456-tlx_energy_total_input_3',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_all_sensors[sensor.min123456_lifetime_total_energy_input_3-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'MIN123456 Lifetime total energy input 3',
      'icon': 'mdi:solar-power',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.min123456_lifetime_total_energy_input_3',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_all_sensors[sensor.min123456_lifetime_total_energy_input_4-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.min123456_lifetime_total_energy_input_4',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Lifetime total energy input 4',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'tlx_energy_total_input_4',
    'unique_id': 'MIN123456-tlx_energy_total_input_4',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_all_sensors[sensor.min123456_lifetime_total_energy_input_4-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'MIN123456 Lifetime total energy input 4',
      'icon': 'mdi:solar-power',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.min123456_lifetime_total_energy_input_4',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_all_sensors[sensor.min123456_lifetime_total_export_to_grid-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.min123456_lifetime_total_export_to_grid',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Lifetime total export to grid',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'tlx_export_to_grid_total',
    'unique_id': 'MIN123456-tlx_export_to_grid_total',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_all_sensors[sensor.min123456_lifetime_total_export_to_grid-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'MIN123456 Lifetime total export to grid',
      'icon': 'mdi:solar-power',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.min123456_lifetime_total_export_to_grid',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_all_sensors[sensor.min123456_lifetime_total_load_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.min123456_lifetime_total_load_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Lifetime total load consumption',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'mix_load_consumption_total',
    'unique_id': 'MIN123456-mix_load_consumption_total',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_all_sensors[sensor.min123456_lifetime_total_load_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'MIN123456 Lifetime total load consumption',
      'icon': 'mdi:solar-power',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.min123456_lifetime_total_load_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_all_sensors[sensor.min123456_lifetime_total_solar_energy-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.min123456_lifetime_total_solar_energy',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Lifetime total solar energy',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'tlx_solar_generation_total',
    'unique_id': 'MIN123456-tlx_solar_generation_total',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_all_sensors[sensor.min123456_lifetime_total_solar_energy-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'MIN123456 Lifetime total solar energy',
      'icon': 'mdi:solar-power',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.min123456_lifetime_total_solar_energy',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_all_sensors[sensor.min123456_load_consumption_today-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.min123456_load_consumption_today',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Load consumption today',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'tlx_load_consumption_today',
    'unique_id': 'MIN123456-tlx_load_consumption_today',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_all_sensors[sensor.min123456_load_consumption_today-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'MIN123456 Load consumption today',
      'icon': 'mdi:solar-power',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.min123456_load_consumption_today',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_all_sensors[sensor.min123456_local_load_power-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.min123456_local_load_power',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 0,
      }),
    }),
    'original_device_class': <SensorDeviceClass.POWER: 'power'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Local load power',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'tlx_pac_to_local_load',
    'unique_id': 'MIN123456-tlx_pac_to_local_load',
    'unit_of_measurement': <UnitOfPower.WATT: 'W'>,
  })
# ---
# name: test_all_sensors[sensor.min123456_local_load_power-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'power',
      'friendly_name': 'MIN123456 Local load power',
      'icon': 'mdi:solar-power',
      'unit_of_measurement': <UnitOfPower.WATT: 'W'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.min123456_local_load_power',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_all_sensors[sensor.min123456_output_power-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.min123456_output_power',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 0,
      }),
    }),
    'original_device_class': <SensorDeviceClass.POWER: 'power'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Output power',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'tlx_current_wattage',
    'unique_id': 'MIN123456-tlx_current_wattage',
    'unit_of_measurement': <UnitOfPower.WATT: 'W'>,
  })
# ---
# name: test_all_sensors[sensor.min123456_output_power-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'power',
      'friendly_name': 'MIN123456 Output power',
      'icon': 'mdi:solar-power',
      'unit_of_measurement': <UnitOfPower.WATT: 'W'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.min123456_output_power',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_all_sensors[sensor.min123456_reactive_voltage-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.min123456_reactive_voltage',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 0,
      }),
    }),
    'original_device_class': <SensorDeviceClass.VOLTAGE: 'voltage'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Reactive voltage',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'tlx_reactive_voltage',
    'unique_id': 'MIN123456-tlx_reactive_voltage',
    'unit_of_measurement': <UnitOfElectricPotential.VOLT: 'V'>,
  })
# ---
# name: test_all_sensors[sensor.min123456_reactive_voltage-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'voltage',
      'friendly_name': 'MIN123456 Reactive voltage',
      'icon': 'mdi:solar-power',
      'unit_of_measurement': <UnitOfElectricPotential.VOLT: 'V'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.min123456_reactive_voltage',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_all_sensors[sensor.min123456_self_consumption_today-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.min123456_self_consumption_today',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Self consumption today',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'tlx_self_consumption_today',
    'unique_id': 'MIN123456-tlx_self_consumption_today',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_all_sensors[sensor.min123456_self_consumption_today-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'MIN123456 Self consumption today',
      'icon': 'mdi:solar-power',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.min123456_self_consumption_today',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_all_sensors[sensor.min123456_self_power-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.min123456_self_power',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 0,
      }),
    }),
    'original_device_class': <SensorDeviceClass.POWER: 'power'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Self power',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'tlx_p_self',
    'unique_id': 'MIN123456-tlx_p_self',
    'unit_of_measurement': <UnitOfPower.WATT: 'W'>,
  })
# ---
# name: test_all_sensors[sensor.min123456_self_power-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'power',
      'friendly_name': 'MIN123456 Self power',
      'icon': 'mdi:solar-power',
      'unit_of_measurement': <UnitOfPower.WATT: 'W'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.min123456_self_power',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_all_sensors[sensor.min123456_solar_energy_today-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.min123456_solar_energy_today',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Solar energy today',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'tlx_solar_generation_today',
    'unique_id': 'MIN123456-tlx_solar_generation_today',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_all_sensors[sensor.min123456_solar_energy_today-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'MIN123456 Solar energy today',
      'icon': 'mdi:solar-power',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.min123456_solar_energy_today',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_all_sensors[sensor.min123456_state_of_charge_soc-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.min123456_state_of_charge_soc',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.BATTERY: 'battery'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'State of charge (SoC)',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'tlx_statement_of_charge',
    'unique_id': 'MIN123456-tlx_statement_of_charge',
    'unit_of_measurement': '%',
  })
# ---
# name: test_all_sensors[sensor.min123456_state_of_charge_soc-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'battery',
      'friendly_name': 'MIN123456 State of charge (SoC)',
      'icon': 'mdi:solar-power',
      'unit_of_measurement': '%',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.min123456_state_of_charge_soc',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_all_sensors[sensor.min123456_system_power-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.min123456_system_power',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 0,
      }),
    }),
    'original_device_class': <SensorDeviceClass.POWER: 'power'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'System power',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'tlx_p_system',
    'unique_id': 'MIN123456-tlx_p_system',
    'unit_of_measurement': <UnitOfPower.WATT: 'W'>,
  })
# ---
# name: test_all_sensors[sensor.min123456_system_power-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'power',
      'friendly_name': 'MIN123456 System power',
      'icon': 'mdi:solar-power',
      'unit_of_measurement': <UnitOfPower.WATT: 'W'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.min123456_system_power',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_all_sensors[sensor.min123456_system_production_today-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.min123456_system_production_today',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'System production today',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'tlx_system_production_today',
    'unique_id': 'MIN123456-tlx_system_production_today',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_all_sensors[sensor.min123456_system_production_today-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'MIN123456 System production today',
      'icon': 'mdi:solar-power',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.min123456_system_production_today',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_all_sensors[sensor.min123456_temperature_1-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.min123456_temperature_1',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 1,
      }),
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Temperature 1',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'tlx_temperature_1',
    'unique_id': 'MIN123456-tlx_temperature_1',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_all_sensors[sensor.min123456_temperature_1-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'MIN123456 Temperature 1',
      'icon': 'mdi:solar-power',
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.min123456_temperature_1',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_all_sensors[sensor.min123456_temperature_2-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.min123456_temperature_2',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 1,
      }),
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Temperature 2',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'tlx_temperature_2',
    'unique_id': 'MIN123456-tlx_temperature_2',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_all_sensors[sensor.min123456_temperature_2-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'MIN123456 Temperature 2',
      'icon': 'mdi:solar-power',
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.min123456_temperature_2',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_all_sensors[sensor.min123456_temperature_3-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.min123456_temperature_3',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 1,
      }),
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Temperature 3',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'tlx_temperature_3',
    'unique_id': 'MIN123456-tlx_temperature_3',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_all_sensors[sensor.min123456_temperature_3-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'MIN123456 Temperature 3',
      'icon': 'mdi:solar-power',
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.min123456_temperature_3',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_all_sensors[sensor.min123456_temperature_4-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.min123456_temperature_4',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 1,
      }),
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Temperature 4',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'tlx_temperature_4',
    'unique_id': 'MIN123456-tlx_temperature_4',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_all_sensors[sensor.min123456_temperature_4-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'MIN123456 Temperature 4',
      'icon': 'mdi:solar-power',
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.min123456_temperature_4',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_all_sensors[sensor.min123456_temperature_5-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.min123456_temperature_5',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 1,
      }),
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Temperature 5',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'tlx_temperature_5',
    'unique_id': 'MIN123456-tlx_temperature_5',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_all_sensors[sensor.min123456_temperature_5-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'MIN123456 Temperature 5',
      'icon': 'mdi:solar-power',
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.min123456_temperature_5',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_all_sensors[sensor.test_plant_total_energy_today-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.test_plant_total_energy_today',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Energy today',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'total_energy_today',
    'unique_id': 'plant_123-total_energy_today',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_all_sensors[sensor.test_plant_total_energy_today-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Test Plant Total Energy today',
      'icon': 'mdi:solar-power',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.test_plant_total_energy_today',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '12.5',
  })
# ---
# name: test_all_sensors[sensor.test_plant_total_lifetime_energy_output-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL: 'total'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.test_plant_total_lifetime_energy_output',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Lifetime energy output',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'total_energy_output',
    'unique_id': 'plant_123-total_energy_output',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_all_sensors[sensor.test_plant_total_lifetime_energy_output-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Test Plant Total Lifetime energy output',
      'icon': 'mdi:solar-power',
      'state_class': <SensorStateClass.TOTAL: 'total'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.test_plant_total_lifetime_energy_output',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '1250.0',
  })
# ---
# name: test_all_sensors[sensor.test_plant_total_maximum_power-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.test_plant_total_maximum_power',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 0,
      }),
    }),
    'original_device_class': <SensorDeviceClass.POWER: 'power'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Maximum power',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'total_maximum_output',
    'unique_id': 'plant_123-total_maximum_output',
    'unit_of_measurement': <UnitOfPower.WATT: 'W'>,
  })
# ---
# name: test_all_sensors[sensor.test_plant_total_maximum_power-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'power',
      'friendly_name': 'Test Plant Total Maximum power',
      'icon': 'mdi:solar-power',
      'unit_of_measurement': <UnitOfPower.WATT: 'W'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.test_plant_total_maximum_power',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_all_sensors[sensor.test_plant_total_money_lifetime-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.test_plant_total_money_lifetime',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Money lifetime',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'total_money_total',
    'unique_id': 'plant_123-total_money_total',
    'unit_of_measurement': None,
  })
# ---
# name: test_all_sensors[sensor.test_plant_total_money_lifetime-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Test Plant Total Money lifetime',
      'icon': 'mdi:solar-power',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.test_plant_total_money_lifetime',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_all_sensors[sensor.test_plant_total_output_power-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.test_plant_total_output_power',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 0,
      }),
    }),
    'original_device_class': <SensorDeviceClass.POWER: 'power'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Output power',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'total_output_power',
    'unique_id': 'plant_123-total_output_power',
    'unit_of_measurement': <UnitOfPower.WATT: 'W'>,
  })
# ---
# name: test_all_sensors[sensor.test_plant_total_output_power-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'power',
      'friendly_name': 'Test Plant Total Output power',
      'icon': 'mdi:solar-power',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfPower.WATT: 'W'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.test_plant_total_output_power',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '2500',
  })
# ---
# name: test_all_sensors[sensor.test_plant_total_total_money_today-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.test_plant_total_total_money_today',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Total money today',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'total_money_today',
    'unique_id': 'plant_123-total_money_today',
    'unit_of_measurement': None,
  })
# ---
# name: test_all_sensors[sensor.test_plant_total_total_money_today-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Test Plant Total Total money today',
      'icon': 'mdi:solar-power',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.test_plant_total_total_money_today',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_sensor_entity_registry[sensor.min123456_ac_frequency-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.min123456_ac_frequency',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 0,
      }),
    }),
    'original_device_class': <SensorDeviceClass.FREQUENCY: 'frequency'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'AC frequency',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'tlx_frequency',
    'unique_id': 'MIN123456-tlx_frequency',
    'unit_of_measurement': <UnitOfFrequency.HERTZ: 'Hz'>,
  })
# ---
# name: test_sensor_entity_registry[sensor.min123456_ac_frequency-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'frequency',
      'friendly_name': 'MIN123456 AC frequency',
      'icon': 'mdi:solar-power',
      'unit_of_measurement': <UnitOfFrequency.HERTZ: 'Hz'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.min123456_ac_frequency',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_sensor_entity_registry[sensor.min123456_all_batteries_charged_today-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.min123456_all_batteries_charged_today',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'All batteries charged today',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'tlx_all_batteries_charge_today',
    'unique_id': 'MIN123456-tlx_all_batteries_charge_today',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_sensor_entity_registry[sensor.min123456_all_batteries_charged_today-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'MIN123456 All batteries charged today',
      'icon': 'mdi:solar-power',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.min123456_all_batteries_charged_today',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_sensor_entity_registry[sensor.min123456_all_batteries_discharged_today-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.min123456_all_batteries_discharged_today',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'All batteries discharged today',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'tlx_all_batteries_discharge_today',
    'unique_id': 'MIN123456-tlx_all_batteries_discharge_today',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_sensor_entity_registry[sensor.min123456_all_batteries_discharged_today-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'MIN123456 All batteries discharged today',
      'icon': 'mdi:solar-power',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.min123456_all_batteries_discharged_today',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_sensor_entity_registry[sensor.min123456_batteries_charged_from_grid_today-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.min123456_batteries_charged_from_grid_today',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Batteries charged from grid today',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'tlx_batteries_charged_from_grid_today',
    'unique_id': 'MIN123456-tlx_batteries_charged_from_grid_today',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_sensor_entity_registry[sensor.min123456_batteries_charged_from_grid_today-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'MIN123456 Batteries charged from grid today',
      'icon': 'mdi:solar-power',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.min123456_batteries_charged_from_grid_today',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_sensor_entity_registry[sensor.min123456_battery_1_charging_w-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.min123456_battery_1_charging_w',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 0,
      }),
    }),
    'original_device_class': <SensorDeviceClass.POWER: 'power'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Battery 1 charging W',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'tlx_battery_1_charge_w',
    'unique_id': 'MIN123456-tlx_battery_1_charge_w',
    'unit_of_measurement': <UnitOfPower.WATT: 'W'>,
  })
# ---
# name: test_sensor_entity_registry[sensor.min123456_battery_1_charging_w-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'power',
      'friendly_name': 'MIN123456 Battery 1 charging W',
      'icon': 'mdi:solar-power',
      'unit_of_measurement': <UnitOfPower.WATT: 'W'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.min123456_battery_1_charging_w',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_sensor_entity_registry[sensor.min123456_battery_1_discharging_w-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.min123456_battery_1_discharging_w',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 0,
      }),
    }),
    'original_device_class': <SensorDeviceClass.POWER: 'power'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Battery 1 discharging W',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'tlx_battery_1_discharge_w',
    'unique_id': 'MIN123456-tlx_battery_1_discharge_w',
    'unit_of_measurement': <UnitOfPower.WATT: 'W'>,
  })
# ---
# name: test_sensor_entity_registry[sensor.min123456_battery_1_discharging_w-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'power',
      'friendly_name': 'MIN123456 Battery 1 discharging W',
      'icon': 'mdi:solar-power',
      'unit_of_measurement': <UnitOfPower.WATT: 'W'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.min123456_battery_1_discharging_w',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_sensor_entity_registry[sensor.min123456_battery_2_charging_w-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.min123456_battery_2_charging_w',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 0,
      }),
    }),
    'original_device_class': <SensorDeviceClass.POWER: 'power'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Battery 2 charging W',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'tlx_battery_2_charge_w',
    'unique_id': 'MIN123456-tlx_battery_2_charge_w',
    'unit_of_measurement': <UnitOfPower.WATT: 'W'>,
  })
# ---
# name: test_sensor_entity_registry[sensor.min123456_battery_2_charging_w-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'power',
      'friendly_name': 'MIN123456 Battery 2 charging W',
      'icon': 'mdi:solar-power',
      'unit_of_measurement': <UnitOfPower.WATT: 'W'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.min123456_battery_2_charging_w',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_sensor_entity_registry[sensor.min123456_battery_2_discharging_w-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.min123456_battery_2_discharging_w',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 0,
      }),
    }),
    'original_device_class': <SensorDeviceClass.POWER: 'power'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Battery 2 discharging W',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'tlx_battery_2_discharge_w',
    'unique_id': 'MIN123456-tlx_battery_2_discharge_w',
    'unit_of_measurement': <UnitOfPower.WATT: 'W'>,
  })
# ---
# name: test_sensor_entity_registry[sensor.min123456_battery_2_discharging_w-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'power',
      'friendly_name': 'MIN123456 Battery 2 discharging W',
      'icon': 'mdi:solar-power',
      'unit_of_measurement': <UnitOfPower.WATT: 'W'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.min123456_battery_2_discharging_w',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_sensor_entity_registry[sensor.min123456_energy_today-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.min123456_energy_today',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Energy today',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'tlx_energy_today',
    'unique_id': 'MIN123456-tlx_energy_today',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_sensor_entity_registry[sensor.min123456_energy_today-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'MIN123456 Energy today',
      'icon': 'mdi:solar-power',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.min123456_energy_today',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_sensor_entity_registry[sensor.min123456_energy_today_input_1-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.min123456_energy_today_input_1',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Energy today input 1',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'tlx_energy_today_input_1',
    'unique_id': 'MIN123456-tlx_energy_today_input_1',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_sensor_entity_registry[sensor.min123456_energy_today_input_1-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'MIN123456 Energy today input 1',
      'icon': 'mdi:solar-power',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.min123456_energy_today_input_1',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_sensor_entity_registry[sensor.min123456_energy_today_input_2-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.min123456_energy_today_input_2',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Energy today input 2',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'tlx_energy_today_input_2',
    'unique_id': 'MIN123456-tlx_energy_today_input_2',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_sensor_entity_registry[sensor.min123456_energy_today_input_2-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'MIN123456 Energy today input 2',
      'icon': 'mdi:solar-power',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.min123456_energy_today_input_2',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_sensor_entity_registry[sensor.min123456_energy_today_input_3-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.min123456_energy_today_input_3',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Energy today input 3',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'tlx_energy_today_input_3',
    'unique_id': 'MIN123456-tlx_energy_today_input_3',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_sensor_entity_registry[sensor.min123456_energy_today_input_3-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'MIN123456 Energy today input 3',
      'icon': 'mdi:solar-power',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.min123456_energy_today_input_3',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_sensor_entity_registry[sensor.min123456_energy_today_input_4-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.min123456_energy_today_input_4',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Energy today input 4',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'tlx_energy_today_input_4',
    'unique_id': 'MIN123456-tlx_energy_today_input_4',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_sensor_entity_registry[sensor.min123456_energy_today_input_4-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'MIN123456 Energy today input 4',
      'icon': 'mdi:solar-power',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.min123456_energy_today_input_4',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_sensor_entity_registry[sensor.min123456_export_power-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.min123456_export_power',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 0,
      }),
    }),
    'original_device_class': <SensorDeviceClass.POWER: 'power'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Export power',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'tlx_pac_to_grid_total',
    'unique_id': 'MIN123456-tlx_pac_to_grid_total',
    'unit_of_measurement': <UnitOfPower.WATT: 'W'>,
  })
# ---
# name: test_sensor_entity_registry[sensor.min123456_export_power-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'power',
      'friendly_name': 'MIN123456 Export power',
      'icon': 'mdi:solar-power',
      'unit_of_measurement': <UnitOfPower.WATT: 'W'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.min123456_export_power',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_sensor_entity_registry[sensor.min123456_export_to_grid_today-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.min123456_export_to_grid_today',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Export to grid today',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'tlx_export_to_grid_today',
    'unique_id': 'MIN123456-tlx_export_to_grid_today',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_sensor_entity_registry[sensor.min123456_export_to_grid_today-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'MIN123456 Export to grid today',
      'icon': 'mdi:solar-power',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.min123456_export_to_grid_today',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_sensor_entity_registry[sensor.min123456_import_from_grid_today-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.min123456_import_from_grid_today',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Import from grid today',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'tlx_import_from_grid_today',
    'unique_id': 'MIN123456-tlx_import_from_grid_today',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_sensor_entity_registry[sensor.min123456_import_from_grid_today-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'MIN123456 Import from grid today',
      'icon': 'mdi:solar-power',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.min123456_import_from_grid_today',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_sensor_entity_registry[sensor.min123456_import_power-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.min123456_import_power',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 0,
      }),
    }),
    'original_device_class': <SensorDeviceClass.POWER: 'power'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Import power',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'tlx_pac_to_user_total',
    'unique_id': 'MIN123456-tlx_pac_to_user_total',
    'unit_of_measurement': <UnitOfPower.WATT: 'W'>,
  })
# ---
# name: test_sensor_entity_registry[sensor.min123456_import_power-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'power',
      'friendly_name': 'MIN123456 Import power',
      'icon': 'mdi:solar-power',
      'unit_of_measurement': <UnitOfPower.WATT: 'W'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.min123456_import_power',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_sensor_entity_registry[sensor.min123456_input_1_amperage-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.min123456_input_1_amperage',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.CURRENT: 'current'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Input 1 amperage',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'tlx_amperage_input_1',
    'unique_id': 'MIN123456-tlx_amperage_input_1',
    'unit_of_measurement': <UnitOfElectricCurrent.AMPERE: 'A'>,
  })
# ---
# name: test_sensor_entity_registry[sensor.min123456_input_1_amperage-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'current',
      'friendly_name': 'MIN123456 Input 1 amperage',
      'icon': 'mdi:solar-power',
      'unit_of_measurement': <UnitOfElectricCurrent.AMPERE: 'A'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.min123456_input_1_amperage',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_sensor_entity_registry[sensor.min123456_input_1_voltage-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.min123456_input_1_voltage',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 0,
      }),
    }),
    'original_device_class': <SensorDeviceClass.VOLTAGE: 'voltage'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Input 1 voltage',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'tlx_voltage_input_1',
    'unique_id': 'MIN123456-tlx_voltage_input_1',
    'unit_of_measurement': <UnitOfElectricPotential.VOLT: 'V'>,
  })
# ---
# name: test_sensor_entity_registry[sensor.min123456_input_1_voltage-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'voltage',
      'friendly_name': 'MIN123456 Input 1 voltage',
      'icon': 'mdi:solar-power',
      'unit_of_measurement': <UnitOfElectricPotential.VOLT: 'V'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.min123456_input_1_voltage',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_sensor_entity_registry[sensor.min123456_input_1_wattage-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.min123456_input_1_wattage',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 0,
      }),
    }),
    'original_device_class': <SensorDeviceClass.POWER: 'power'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Input 1 wattage',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'tlx_wattage_input_1',
    'unique_id': 'MIN123456-tlx_wattage_input_1',
    'unit_of_measurement': <UnitOfPower.WATT: 'W'>,
  })
# ---
# name: test_sensor_entity_registry[sensor.min123456_input_1_wattage-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'power',
      'friendly_name': 'MIN123456 Input 1 wattage',
      'icon': 'mdi:solar-power',
      'unit_of_measurement': <UnitOfPower.WATT: 'W'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.min123456_input_1_wattage',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_sensor_entity_registry[sensor.min123456_input_2_amperage-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.min123456_input_2_amperage',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.CURRENT: 'current'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Input 2 amperage',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'tlx_amperage_input_2',
    'unique_id': 'MIN123456-tlx_amperage_input_2',
    'unit_of_measurement': <UnitOfElectricCurrent.AMPERE: 'A'>,
  })
# ---
# name: test_sensor_entity_registry[sensor.min123456_input_2_amperage-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'current',
      'friendly_name': 'MIN123456 Input 2 amperage',
      'icon': 'mdi:solar-power',
      'unit_of_measurement': <UnitOfElectricCurrent.AMPERE: 'A'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.min123456_input_2_amperage',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_sensor_entity_registry[sensor.min123456_input_2_voltage-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.min123456_input_2_voltage',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 0,
      }),
    }),
    'original_device_class': <SensorDeviceClass.VOLTAGE: 'voltage'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Input 2 voltage',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'tlx_voltage_input_2',
    'unique_id': 'MIN123456-tlx_voltage_input_2',
    'unit_of_measurement': <UnitOfElectricPotential.VOLT: 'V'>,
  })
# ---
# name: test_sensor_entity_registry[sensor.min123456_input_2_voltage-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'voltage',
      'friendly_name': 'MIN123456 Input 2 voltage',
      'icon': 'mdi:solar-power',
      'unit_of_measurement': <UnitOfElectricPotential.VOLT: 'V'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.min123456_input_2_voltage',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_sensor_entity_registry[sensor.min123456_input_2_wattage-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.min123456_input_2_wattage',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 0,
      }),
    }),
    'original_device_class': <SensorDeviceClass.POWER: 'power'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Input 2 wattage',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'tlx_wattage_input_2',
    'unique_id': 'MIN123456-tlx_wattage_input_2',
    'unit_of_measurement': <UnitOfPower.WATT: 'W'>,
  })
# ---
# name: test_sensor_entity_registry[sensor.min123456_input_2_wattage-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'power',
      'friendly_name': 'MIN123456 Input 2 wattage',
      'icon': 'mdi:solar-power',
      'unit_of_measurement': <UnitOfPower.WATT: 'W'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.min123456_input_2_wattage',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_sensor_entity_registry[sensor.min123456_input_3_amperage-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.min123456_input_3_amperage',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.CURRENT: 'current'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Input 3 amperage',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'tlx_amperage_input_3',
    'unique_id': 'MIN123456-tlx_amperage_input_3',
    'unit_of_measurement': <UnitOfElectricCurrent.AMPERE: 'A'>,
  })
# ---
# name: test_sensor_entity_registry[sensor.min123456_input_3_amperage-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'current',
      'friendly_name': 'MIN123456 Input 3 amperage',
      'icon': 'mdi:solar-power',
      'unit_of_measurement': <UnitOfElectricCurrent.AMPERE: 'A'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.min123456_input_3_amperage',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_sensor_entity_registry[sensor.min123456_input_3_voltage-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.min123456_input_3_voltage',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 0,
      }),
    }),
    'original_device_class': <SensorDeviceClass.VOLTAGE: 'voltage'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Input 3 voltage',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'tlx_voltage_input_3',
    'unique_id': 'MIN123456-tlx_voltage_input_3',
    'unit_of_measurement': <UnitOfElectricPotential.VOLT: 'V'>,
  })
# ---
# name: test_sensor_entity_registry[sensor.min123456_input_3_voltage-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'voltage',
      'friendly_name': 'MIN123456 Input 3 voltage',
      'icon': 'mdi:solar-power',
      'unit_of_measurement': <UnitOfElectricPotential.VOLT: 'V'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.min123456_input_3_voltage',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_sensor_entity_registry[sensor.min123456_input_3_wattage-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.min123456_input_3_wattage',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 0,
      }),
    }),
    'original_device_class': <SensorDeviceClass.POWER: 'power'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Input 3 wattage',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'tlx_wattage_input_3',
    'unique_id': 'MIN123456-tlx_wattage_input_3',
    'unit_of_measurement': <UnitOfPower.WATT: 'W'>,
  })
# ---
# name: test_sensor_entity_registry[sensor.min123456_input_3_wattage-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'power',
      'friendly_name': 'MIN123456 Input 3 wattage',
      'icon': 'mdi:solar-power',
      'unit_of_measurement': <UnitOfPower.WATT: 'W'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.min123456_input_3_wattage',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_sensor_entity_registry[sensor.min123456_input_4_amperage-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.min123456_input_4_amperage',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.CURRENT: 'current'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Input 4 amperage',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'tlx_amperage_input_4',
    'unique_id': 'MIN123456-tlx_amperage_input_4',
    'unit_of_measurement': <UnitOfElectricCurrent.AMPERE: 'A'>,
  })
# ---
# name: test_sensor_entity_registry[sensor.min123456_input_4_amperage-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'current',
      'friendly_name': 'MIN123456 Input 4 amperage',
      'icon': 'mdi:solar-power',
      'unit_of_measurement': <UnitOfElectricCurrent.AMPERE: 'A'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.min123456_input_4_amperage',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_sensor_entity_registry[sensor.min123456_input_4_voltage-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.min123456_input_4_voltage',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 0,
      }),
    }),
    'original_device_class': <SensorDeviceClass.VOLTAGE: 'voltage'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Input 4 voltage',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'tlx_voltage_input_4',
    'unique_id': 'MIN123456-tlx_voltage_input_4',
    'unit_of_measurement': <UnitOfElectricPotential.VOLT: 'V'>,
  })
# ---
# name: test_sensor_entity_registry[sensor.min123456_input_4_voltage-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'voltage',
      'friendly_name': 'MIN123456 Input 4 voltage',
      'icon': 'mdi:solar-power',
      'unit_of_measurement': <UnitOfElectricPotential.VOLT: 'V'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.min123456_input_4_voltage',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_sensor_entity_registry[sensor.min123456_input_4_wattage-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.min123456_input_4_wattage',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 0,
      }),
    }),
    'original_device_class': <SensorDeviceClass.POWER: 'power'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Input 4 wattage',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'tlx_wattage_input_4',
    'unique_id': 'MIN123456-tlx_wattage_input_4',
    'unit_of_measurement': <UnitOfPower.WATT: 'W'>,
  })
# ---
# name: test_sensor_entity_registry[sensor.min123456_input_4_wattage-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'power',
      'friendly_name': 'MIN123456 Input 4 wattage',
      'icon': 'mdi:solar-power',
      'unit_of_measurement': <UnitOfPower.WATT: 'W'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.min123456_input_4_wattage',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_sensor_entity_registry[sensor.min123456_internal_wattage-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.min123456_internal_wattage',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 0,
      }),
    }),
    'original_device_class': <SensorDeviceClass.POWER: 'power'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Internal wattage',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'tlx_internal_wattage',
    'unique_id': 'MIN123456-tlx_internal_wattage',
    'unit_of_measurement': <UnitOfPower.WATT: 'W'>,
  })
# ---
# name: test_sensor_entity_registry[sensor.min123456_internal_wattage-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'power',
      'friendly_name': 'MIN123456 Internal wattage',
      'icon': 'mdi:solar-power',
      'unit_of_measurement': <UnitOfPower.WATT: 'W'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.min123456_internal_wattage',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_sensor_entity_registry[sensor.min123456_lifetime_batteries_charged_from_grid-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.min123456_lifetime_batteries_charged_from_grid',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Lifetime batteries charged from grid',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'tlx_batteries_charged_from_grid_total',
    'unique_id': 'MIN123456-tlx_batteries_charged_from_grid_total',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_sensor_entity_registry[sensor.min123456_lifetime_batteries_charged_from_grid-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'MIN123456 Lifetime batteries charged from grid',
      'icon': 'mdi:solar-power',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.min123456_lifetime_batteries_charged_from_grid',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_sensor_entity_registry[sensor.min123456_lifetime_energy_output-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.min123456_lifetime_energy_output',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Lifetime energy output',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'tlx_energy_total',
    'unique_id': 'MIN123456-tlx_energy_total',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_sensor_entity_registry[sensor.min123456_lifetime_energy_output-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'MIN123456 Lifetime energy output',
      'icon': 'mdi:solar-power',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.min123456_lifetime_energy_output',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_sensor_entity_registry[sensor.min123456_lifetime_import_from_grid-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.min123456_lifetime_import_from_grid',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Lifetime import from grid',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'tlx_import_from_grid_total',
    'unique_id': 'MIN123456-tlx_import_from_grid_total',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_sensor_entity_registry[sensor.min123456_lifetime_import_from_grid-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'MIN123456 Lifetime import from grid',
      'icon': 'mdi:solar-power',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.min123456_lifetime_import_from_grid',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_sensor_entity_registry[sensor.min123456_lifetime_self_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.min123456_lifetime_self_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Lifetime self consumption',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'tlx_self_consumption_total',
    'unique_id': 'MIN123456-tlx_self_consumption_total',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_sensor_entity_registry[sensor.min123456_lifetime_self_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'MIN123456 Lifetime self consumption',
      'icon': 'mdi:solar-power',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.min123456_lifetime_self_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_sensor_entity_registry[sensor.min123456_lifetime_system_production-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.min123456_lifetime_system_production',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Lifetime system production',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'tlx_system_production_total',
    'unique_id': 'MIN123456-tlx_system_production_total',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_sensor_entity_registry[sensor.min123456_lifetime_system_production-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'MIN123456 Lifetime system production',
      'icon': 'mdi:solar-power',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.min123456_lifetime_system_production',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_sensor_entity_registry[sensor.min123456_lifetime_total_all_batteries_charged-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.min123456_lifetime_total_all_batteries_charged',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Lifetime total all batteries charged',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'tlx_all_batteries_charge_total',
    'unique_id': 'MIN123456-tlx_all_batteries_charge_total',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_sensor_entity_registry[sensor.min123456_lifetime_total_all_batteries_charged-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'MIN123456 Lifetime total all batteries charged',
      'icon': 'mdi:solar-power',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.min123456_lifetime_total_all_batteries_charged',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_sensor_entity_registry[sensor.min123456_lifetime_total_all_batteries_discharged-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.min123456_lifetime_total_all_batteries_discharged',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Lifetime total all batteries discharged',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'tlx_all_batteries_discharge_total',
    'unique_id': 'MIN123456-tlx_all_batteries_discharge_total',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_sensor_entity_registry[sensor.min123456_lifetime_total_all_batteries_discharged-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'MIN123456 Lifetime total all batteries discharged',
      'icon': 'mdi:solar-power',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.min123456_lifetime_total_all_batteries_discharged',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_sensor_entity_registry[sensor.min123456_lifetime_total_battery_1_charged-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.min123456_lifetime_total_battery_1_charged',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Lifetime total battery 1 charged',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'tlx_battery_1_charge_total',
    'unique_id': 'MIN123456-tlx_battery_1_charge_total',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_sensor_entity_registry[sensor.min123456_lifetime_total_battery_1_charged-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'MIN123456 Lifetime total battery 1 charged',
      'icon': 'mdi:solar-power',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.min123456_lifetime_total_battery_1_charged',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_sensor_entity_registry[sensor.min123456_lifetime_total_battery_1_discharged-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.min123456_lifetime_total_battery_1_discharged',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Lifetime total battery 1 discharged',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'tlx_battery_1_discharge_total',
    'unique_id': 'MIN123456-tlx_battery_1_discharge_total',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_sensor_entity_registry[sensor.min123456_lifetime_total_battery_1_discharged-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'MIN123456 Lifetime total battery 1 discharged',
      'icon': 'mdi:solar-power',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.min123456_lifetime_total_battery_1_discharged',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_sensor_entity_registry[sensor.min123456_lifetime_total_battery_2_charged-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.min123456_lifetime_total_battery_2_charged',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Lifetime total battery 2 charged',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'tlx_battery_2_charge_total',
    'unique_id': 'MIN123456-tlx_battery_2_charge_total',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_sensor_entity_registry[sensor.min123456_lifetime_total_battery_2_charged-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'MIN123456 Lifetime total battery 2 charged',
      'icon': 'mdi:solar-power',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.min123456_lifetime_total_battery_2_charged',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_sensor_entity_registry[sensor.min123456_lifetime_total_battery_2_discharged-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.min123456_lifetime_total_battery_2_discharged',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Lifetime total battery 2 discharged',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'tlx_battery_2_discharge_total',
    'unique_id': 'MIN123456-tlx_battery_2_discharge_total',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_sensor_entity_registry[sensor.min123456_lifetime_total_battery_2_discharged-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'MIN123456 Lifetime total battery 2 discharged',
      'icon': 'mdi:solar-power',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.min123456_lifetime_total_battery_2_discharged',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_sensor_entity_registry[sensor.min123456_lifetime_total_energy_input_1-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.min123456_lifetime_total_energy_input_1',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Lifetime total energy input 1',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'tlx_energy_total_input_1',
    'unique_id': 'MIN123456-tlx_energy_total_input_1',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_sensor_entity_registry[sensor.min123456_lifetime_total_energy_input_1-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'MIN123456 Lifetime total energy input 1',
      'icon': 'mdi:solar-power',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.min123456_lifetime_total_energy_input_1',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_sensor_entity_registry[sensor.min123456_lifetime_total_energy_input_2-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.min123456_lifetime_total_energy_input_2',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Lifetime total energy input 2',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'tlx_energy_total_input_2',
    'unique_id': 'MIN123456-tlx_energy_total_input_2',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_sensor_entity_registry[sensor.min123456_lifetime_total_energy_input_2-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'MIN123456 Lifetime total energy input 2',
      'icon': 'mdi:solar-power',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.min123456_lifetime_total_energy_input_2',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_sensor_entity_registry[sensor.min123456_lifetime_total_energy_input_3-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.min123456_lifetime_total_energy_input_3',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Lifetime total energy input 3',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'tlx_energy_total_input_3',
    'unique_id': 'MIN123456-tlx_energy_total_input_3',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_sensor_entity_registry[sensor.min123456_lifetime_total_energy_input_3-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'MIN123456 Lifetime total energy input 3',
      'icon': 'mdi:solar-power',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.min123456_lifetime_total_energy_input_3',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_sensor_entity_registry[sensor.min123456_lifetime_total_energy_input_4-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.min123456_lifetime_total_energy_input_4',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Lifetime total energy input 4',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'tlx_energy_total_input_4',
    'unique_id': 'MIN123456-tlx_energy_total_input_4',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_sensor_entity_registry[sensor.min123456_lifetime_total_energy_input_4-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'MIN123456 Lifetime total energy input 4',
      'icon': 'mdi:solar-power',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.min123456_lifetime_total_energy_input_4',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_sensor_entity_registry[sensor.min123456_lifetime_total_export_to_grid-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.min123456_lifetime_total_export_to_grid',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Lifetime total export to grid',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'tlx_export_to_grid_total',
    'unique_id': 'MIN123456-tlx_export_to_grid_total',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_sensor_entity_registry[sensor.min123456_lifetime_total_export_to_grid-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'MIN123456 Lifetime total export to grid',
      'icon': 'mdi:solar-power',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.min123456_lifetime_total_export_to_grid',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_sensor_entity_registry[sensor.min123456_lifetime_total_load_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.min123456_lifetime_total_load_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Lifetime total load consumption',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'mix_load_consumption_total',
    'unique_id': 'MIN123456-mix_load_consumption_total',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_sensor_entity_registry[sensor.min123456_lifetime_total_load_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'MIN123456 Lifetime total load consumption',
      'icon': 'mdi:solar-power',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.min123456_lifetime_total_load_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_sensor_entity_registry[sensor.min123456_lifetime_total_solar_energy-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.min123456_lifetime_total_solar_energy',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Lifetime total solar energy',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'tlx_solar_generation_total',
    'unique_id': 'MIN123456-tlx_solar_generation_total',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_sensor_entity_registry[sensor.min123456_lifetime_total_solar_energy-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'MIN123456 Lifetime total solar energy',
      'icon': 'mdi:solar-power',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.min123456_lifetime_total_solar_energy',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_sensor_entity_registry[sensor.min123456_load_consumption_today-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.min123456_load_consumption_today',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Load consumption today',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'tlx_load_consumption_today',
    'unique_id': 'MIN123456-tlx_load_consumption_today',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_sensor_entity_registry[sensor.min123456_load_consumption_today-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'MIN123456 Load consumption today',
      'icon': 'mdi:solar-power',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.min123456_load_consumption_today',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_sensor_entity_registry[sensor.min123456_local_load_power-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.min123456_local_load_power',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 0,
      }),
    }),
    'original_device_class': <SensorDeviceClass.POWER: 'power'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Local load power',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'tlx_pac_to_local_load',
    'unique_id': 'MIN123456-tlx_pac_to_local_load',
    'unit_of_measurement': <UnitOfPower.WATT: 'W'>,
  })
# ---
# name: test_sensor_entity_registry[sensor.min123456_local_load_power-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'power',
      'friendly_name': 'MIN123456 Local load power',
      'icon': 'mdi:solar-power',
      'unit_of_measurement': <UnitOfPower.WATT: 'W'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.min123456_local_load_power',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_sensor_entity_registry[sensor.min123456_output_power-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.min123456_output_power',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 0,
      }),
    }),
    'original_device_class': <SensorDeviceClass.POWER: 'power'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Output power',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'tlx_current_wattage',
    'unique_id': 'MIN123456-tlx_current_wattage',
    'unit_of_measurement': <UnitOfPower.WATT: 'W'>,
  })
# ---
# name: test_sensor_entity_registry[sensor.min123456_output_power-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'power',
      'friendly_name': 'MIN123456 Output power',
      'icon': 'mdi:solar-power',
      'unit_of_measurement': <UnitOfPower.WATT: 'W'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.min123456_output_power',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_sensor_entity_registry[sensor.min123456_reactive_voltage-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.min123456_reactive_voltage',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 0,
      }),
    }),
    'original_device_class': <SensorDeviceClass.VOLTAGE: 'voltage'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Reactive voltage',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'tlx_reactive_voltage',
    'unique_id': 'MIN123456-tlx_reactive_voltage',
    'unit_of_measurement': <UnitOfElectricPotential.VOLT: 'V'>,
  })
# ---
# name: test_sensor_entity_registry[sensor.min123456_reactive_voltage-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'voltage',
      'friendly_name': 'MIN123456 Reactive voltage',
      'icon': 'mdi:solar-power',
      'unit_of_measurement': <UnitOfElectricPotential.VOLT: 'V'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.min123456_reactive_voltage',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_sensor_entity_registry[sensor.min123456_self_consumption_today-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.min123456_self_consumption_today',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Self consumption today',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'tlx_self_consumption_today',
    'unique_id': 'MIN123456-tlx_self_consumption_today',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_sensor_entity_registry[sensor.min123456_self_consumption_today-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'MIN123456 Self consumption today',
      'icon': 'mdi:solar-power',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.min123456_self_consumption_today',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_sensor_entity_registry[sensor.min123456_self_power-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.min123456_self_power',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 0,
      }),
    }),
    'original_device_class': <SensorDeviceClass.POWER: 'power'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Self power',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'tlx_p_self',
    'unique_id': 'MIN123456-tlx_p_self',
    'unit_of_measurement': <UnitOfPower.WATT: 'W'>,
  })
# ---
# name: test_sensor_entity_registry[sensor.min123456_self_power-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'power',
      'friendly_name': 'MIN123456 Self power',
      'icon': 'mdi:solar-power',
      'unit_of_measurement': <UnitOfPower.WATT: 'W'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.min123456_self_power',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_sensor_entity_registry[sensor.min123456_solar_energy_today-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.min123456_solar_energy_today',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Solar energy today',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'tlx_solar_generation_today',
    'unique_id': 'MIN123456-tlx_solar_generation_today',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_sensor_entity_registry[sensor.min123456_solar_energy_today-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'MIN123456 Solar energy today',
      'icon': 'mdi:solar-power',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.min123456_solar_energy_today',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_sensor_entity_registry[sensor.min123456_state_of_charge_soc-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.min123456_state_of_charge_soc',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.BATTERY: 'battery'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'State of charge (SoC)',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'tlx_statement_of_charge',
    'unique_id': 'MIN123456-tlx_statement_of_charge',
    'unit_of_measurement': '%',
  })
# ---
# name: test_sensor_entity_registry[sensor.min123456_state_of_charge_soc-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'battery',
      'friendly_name': 'MIN123456 State of charge (SoC)',
      'icon': 'mdi:solar-power',
      'unit_of_measurement': '%',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.min123456_state_of_charge_soc',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_sensor_entity_registry[sensor.min123456_system_power-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.min123456_system_power',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 0,
      }),
    }),
    'original_device_class': <SensorDeviceClass.POWER: 'power'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'System power',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'tlx_p_system',
    'unique_id': 'MIN123456-tlx_p_system',
    'unit_of_measurement': <UnitOfPower.WATT: 'W'>,
  })
# ---
# name: test_sensor_entity_registry[sensor.min123456_system_power-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'power',
      'friendly_name': 'MIN123456 System power',
      'icon': 'mdi:solar-power',
      'unit_of_measurement': <UnitOfPower.WATT: 'W'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.min123456_system_power',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_sensor_entity_registry[sensor.min123456_system_production_today-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.min123456_system_production_today',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'System production today',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'tlx_system_production_today',
    'unique_id': 'MIN123456-tlx_system_production_today',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_sensor_entity_registry[sensor.min123456_system_production_today-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'MIN123456 System production today',
      'icon': 'mdi:solar-power',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.min123456_system_production_today',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_sensor_entity_registry[sensor.min123456_temperature_1-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.min123456_temperature_1',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 1,
      }),
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Temperature 1',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'tlx_temperature_1',
    'unique_id': 'MIN123456-tlx_temperature_1',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_sensor_entity_registry[sensor.min123456_temperature_1-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'MIN123456 Temperature 1',
      'icon': 'mdi:solar-power',
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.min123456_temperature_1',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_sensor_entity_registry[sensor.min123456_temperature_2-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.min123456_temperature_2',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 1,
      }),
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Temperature 2',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'tlx_temperature_2',
    'unique_id': 'MIN123456-tlx_temperature_2',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_sensor_entity_registry[sensor.min123456_temperature_2-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'MIN123456 Temperature 2',
      'icon': 'mdi:solar-power',
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.min123456_temperature_2',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_sensor_entity_registry[sensor.min123456_temperature_3-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.min123456_temperature_3',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 1,
      }),
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Temperature 3',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'tlx_temperature_3',
    'unique_id': 'MIN123456-tlx_temperature_3',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_sensor_entity_registry[sensor.min123456_temperature_3-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'MIN123456 Temperature 3',
      'icon': 'mdi:solar-power',
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.min123456_temperature_3',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_sensor_entity_registry[sensor.min123456_temperature_4-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.min123456_temperature_4',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 1,
      }),
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Temperature 4',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'tlx_temperature_4',
    'unique_id': 'MIN123456-tlx_temperature_4',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_sensor_entity_registry[sensor.min123456_temperature_4-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'MIN123456 Temperature 4',
      'icon': 'mdi:solar-power',
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.min123456_temperature_4',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_sensor_entity_registry[sensor.min123456_temperature_5-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.min123456_temperature_5',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 1,
      }),
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Temperature 5',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'tlx_temperature_5',
    'unique_id': 'MIN123456-tlx_temperature_5',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_sensor_entity_registry[sensor.min123456_temperature_5-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'MIN123456 Temperature 5',
      'icon': 'mdi:solar-power',
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.min123456_temperature_5',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_sensor_entity_registry[sensor.test_plant_total_energy_today-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.test_plant_total_energy_today',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Energy today',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'total_energy_today',
    'unique_id': 'plant_123-total_energy_today',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_sensor_entity_registry[sensor.test_plant_total_energy_today-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Test Plant Total Energy today',
      'icon': 'mdi:solar-power',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.test_plant_total_energy_today',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '12.5',
  })
# ---
# name: test_sensor_entity_registry[sensor.test_plant_total_lifetime_energy_output-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL: 'total'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.test_plant_total_lifetime_energy_output',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Lifetime energy output',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'total_energy_output',
    'unique_id': 'plant_123-total_energy_output',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_sensor_entity_registry[sensor.test_plant_total_lifetime_energy_output-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Test Plant Total Lifetime energy output',
      'icon': 'mdi:solar-power',
      'state_class': <SensorStateClass.TOTAL: 'total'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.test_plant_total_lifetime_energy_output',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '1250.0',
  })
# ---
# name: test_sensor_entity_registry[sensor.test_plant_total_maximum_power-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.test_plant_total_maximum_power',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 0,
      }),
    }),
    'original_device_class': <SensorDeviceClass.POWER: 'power'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Maximum power',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'total_maximum_output',
    'unique_id': 'plant_123-total_maximum_output',
    'unit_of_measurement': <UnitOfPower.WATT: 'W'>,
  })
# ---
# name: test_sensor_entity_registry[sensor.test_plant_total_maximum_power-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'power',
      'friendly_name': 'Test Plant Total Maximum power',
      'icon': 'mdi:solar-power',
      'unit_of_measurement': <UnitOfPower.WATT: 'W'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.test_plant_total_maximum_power',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_sensor_entity_registry[sensor.test_plant_total_money_lifetime-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.test_plant_total_money_lifetime',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Money lifetime',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'total_money_total',
    'unique_id': 'plant_123-total_money_total',
    'unit_of_measurement': None,
  })
# ---
# name: test_sensor_entity_registry[sensor.test_plant_total_money_lifetime-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Test Plant Total Money lifetime',
      'icon': 'mdi:solar-power',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.test_plant_total_money_lifetime',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_sensor_entity_registry[sensor.test_plant_total_output_power-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.test_plant_total_output_power',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 0,
      }),
    }),
    'original_device_class': <SensorDeviceClass.POWER: 'power'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Output power',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'total_output_power',
    'unique_id': 'plant_123-total_output_power',
    'unit_of_measurement': <UnitOfPower.WATT: 'W'>,
  })
# ---
# name: test_sensor_entity_registry[sensor.test_plant_total_output_power-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'power',
      'friendly_name': 'Test Plant Total Output power',
      'icon': 'mdi:solar-power',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfPower.WATT: 'W'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.test_plant_total_output_power',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '2500',
  })
# ---
# name: test_sensor_entity_registry[sensor.test_plant_total_total_money_today-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.test_plant_total_total_money_today',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Total money today',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'total_money_today',
    'unique_id': 'plant_123-total_money_today',
    'unit_of_measurement': None,
  })
# ---
# name: test_sensor_entity_registry[sensor.test_plant_total_total_money_today-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Test Plant Total Total money today',
      'icon': 'mdi:solar-power',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.test_plant_total_total_money_today',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_total_sensors_classic_api[sensor.test_plant_total_energy_today-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.test_plant_total_energy_today',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Energy today',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'total_energy_today',
    'unique_id': '12345-total_energy_today',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_total_sensors_classic_api[sensor.test_plant_total_energy_today-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Test Plant Total Energy today',
      'icon': 'mdi:solar-power',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.test_plant_total_energy_today',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '12.5',
  })
# ---
# name: test_total_sensors_classic_api[sensor.test_plant_total_lifetime_energy_output-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL: 'total'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.test_plant_total_lifetime_energy_output',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Lifetime energy output',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'total_energy_output',
    'unique_id': '12345-total_energy_output',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_total_sensors_classic_api[sensor.test_plant_total_lifetime_energy_output-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'Test Plant Total Lifetime energy output',
      'icon': 'mdi:solar-power',
      'state_class': <SensorStateClass.TOTAL: 'total'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.test_plant_total_lifetime_energy_output',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '1250.0',
  })
# ---
# name: test_total_sensors_classic_api[sensor.test_plant_total_maximum_power-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.test_plant_total_maximum_power',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 0,
      }),
    }),
    'original_device_class': <SensorDeviceClass.POWER: 'power'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Maximum power',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'total_maximum_output',
    'unique_id': '12345-total_maximum_output',
    'unit_of_measurement': <UnitOfPower.WATT: 'W'>,
  })
# ---
# name: test_total_sensors_classic_api[sensor.test_plant_total_maximum_power-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'power',
      'friendly_name': 'Test Plant Total Maximum power',
      'icon': 'mdi:solar-power',
      'unit_of_measurement': <UnitOfPower.WATT: 'W'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.test_plant_total_maximum_power',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_total_sensors_classic_api[sensor.test_plant_total_money_lifetime-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.test_plant_total_money_lifetime',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Money lifetime',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'total_money_total',
    'unique_id': '12345-total_money_total',
    'unit_of_measurement': 'USD',
  })
# ---
# name: test_total_sensors_classic_api[sensor.test_plant_total_money_lifetime-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Test Plant Total Money lifetime',
      'icon': 'mdi:solar-power',
      'unit_of_measurement': 'USD',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.test_plant_total_money_lifetime',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_total_sensors_classic_api[sensor.test_plant_total_output_power-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.test_plant_total_output_power',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 0,
      }),
    }),
    'original_device_class': <SensorDeviceClass.POWER: 'power'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Output power',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'total_output_power',
    'unique_id': '12345-total_output_power',
    'unit_of_measurement': <UnitOfPower.WATT: 'W'>,
  })
# ---
# name: test_total_sensors_classic_api[sensor.test_plant_total_output_power-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'power',
      'friendly_name': 'Test Plant Total Output power',
      'icon': 'mdi:solar-power',
      'state_class': <SensorStateClass.MEASUREMENT: 'measurement'>,
      'unit_of_measurement': <UnitOfPower.WATT: 'W'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.test_plant_total_output_power',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '2500',
  })
# ---
# name: test_total_sensors_classic_api[sensor.test_plant_total_total_money_today-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.test_plant_total_total_money_today',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': None,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Total money today',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'total_money_today',
    'unique_id': '12345-total_money_today',
    'unit_of_measurement': 'USD',
  })
# ---
# name: test_total_sensors_classic_api[sensor.test_plant_total_total_money_today-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'friendly_name': 'Test Plant Total Total money today',
      'icon': 'mdi:solar-power',
      'unit_of_measurement': 'USD',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.test_plant_total_total_money_today',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': '123.45',
  })
# ---
# name: test_total_sensors_classic_api[sensor.tlx123456_ac_frequency-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.tlx123456_ac_frequency',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 0,
      }),
    }),
    'original_device_class': <SensorDeviceClass.FREQUENCY: 'frequency'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'AC frequency',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'tlx_frequency',
    'unique_id': 'TLX123456-tlx_frequency',
    'unit_of_measurement': <UnitOfFrequency.HERTZ: 'Hz'>,
  })
# ---
# name: test_total_sensors_classic_api[sensor.tlx123456_ac_frequency-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'frequency',
      'friendly_name': 'TLX123456 AC frequency',
      'icon': 'mdi:solar-power',
      'unit_of_measurement': <UnitOfFrequency.HERTZ: 'Hz'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.tlx123456_ac_frequency',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_total_sensors_classic_api[sensor.tlx123456_all_batteries_charged_today-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.tlx123456_all_batteries_charged_today',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'All batteries charged today',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'tlx_all_batteries_charge_today',
    'unique_id': 'TLX123456-tlx_all_batteries_charge_today',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_total_sensors_classic_api[sensor.tlx123456_all_batteries_charged_today-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'TLX123456 All batteries charged today',
      'icon': 'mdi:solar-power',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.tlx123456_all_batteries_charged_today',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_total_sensors_classic_api[sensor.tlx123456_all_batteries_discharged_today-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.tlx123456_all_batteries_discharged_today',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'All batteries discharged today',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'tlx_all_batteries_discharge_today',
    'unique_id': 'TLX123456-tlx_all_batteries_discharge_today',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_total_sensors_classic_api[sensor.tlx123456_all_batteries_discharged_today-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'TLX123456 All batteries discharged today',
      'icon': 'mdi:solar-power',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.tlx123456_all_batteries_discharged_today',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_total_sensors_classic_api[sensor.tlx123456_batteries_charged_from_grid_today-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.tlx123456_batteries_charged_from_grid_today',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Batteries charged from grid today',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'tlx_batteries_charged_from_grid_today',
    'unique_id': 'TLX123456-tlx_batteries_charged_from_grid_today',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_total_sensors_classic_api[sensor.tlx123456_batteries_charged_from_grid_today-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'TLX123456 Batteries charged from grid today',
      'icon': 'mdi:solar-power',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.tlx123456_batteries_charged_from_grid_today',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_total_sensors_classic_api[sensor.tlx123456_battery_1_charging_w-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.tlx123456_battery_1_charging_w',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 0,
      }),
    }),
    'original_device_class': <SensorDeviceClass.POWER: 'power'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Battery 1 charging W',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'tlx_battery_1_charge_w',
    'unique_id': 'TLX123456-tlx_battery_1_charge_w',
    'unit_of_measurement': <UnitOfPower.WATT: 'W'>,
  })
# ---
# name: test_total_sensors_classic_api[sensor.tlx123456_battery_1_charging_w-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'power',
      'friendly_name': 'TLX123456 Battery 1 charging W',
      'icon': 'mdi:solar-power',
      'unit_of_measurement': <UnitOfPower.WATT: 'W'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.tlx123456_battery_1_charging_w',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_total_sensors_classic_api[sensor.tlx123456_battery_1_discharging_w-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.tlx123456_battery_1_discharging_w',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 0,
      }),
    }),
    'original_device_class': <SensorDeviceClass.POWER: 'power'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Battery 1 discharging W',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'tlx_battery_1_discharge_w',
    'unique_id': 'TLX123456-tlx_battery_1_discharge_w',
    'unit_of_measurement': <UnitOfPower.WATT: 'W'>,
  })
# ---
# name: test_total_sensors_classic_api[sensor.tlx123456_battery_1_discharging_w-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'power',
      'friendly_name': 'TLX123456 Battery 1 discharging W',
      'icon': 'mdi:solar-power',
      'unit_of_measurement': <UnitOfPower.WATT: 'W'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.tlx123456_battery_1_discharging_w',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_total_sensors_classic_api[sensor.tlx123456_battery_2_charging_w-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.tlx123456_battery_2_charging_w',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 0,
      }),
    }),
    'original_device_class': <SensorDeviceClass.POWER: 'power'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Battery 2 charging W',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'tlx_battery_2_charge_w',
    'unique_id': 'TLX123456-tlx_battery_2_charge_w',
    'unit_of_measurement': <UnitOfPower.WATT: 'W'>,
  })
# ---
# name: test_total_sensors_classic_api[sensor.tlx123456_battery_2_charging_w-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'power',
      'friendly_name': 'TLX123456 Battery 2 charging W',
      'icon': 'mdi:solar-power',
      'unit_of_measurement': <UnitOfPower.WATT: 'W'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.tlx123456_battery_2_charging_w',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_total_sensors_classic_api[sensor.tlx123456_battery_2_discharging_w-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.tlx123456_battery_2_discharging_w',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 0,
      }),
    }),
    'original_device_class': <SensorDeviceClass.POWER: 'power'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Battery 2 discharging W',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'tlx_battery_2_discharge_w',
    'unique_id': 'TLX123456-tlx_battery_2_discharge_w',
    'unit_of_measurement': <UnitOfPower.WATT: 'W'>,
  })
# ---
# name: test_total_sensors_classic_api[sensor.tlx123456_battery_2_discharging_w-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'power',
      'friendly_name': 'TLX123456 Battery 2 discharging W',
      'icon': 'mdi:solar-power',
      'unit_of_measurement': <UnitOfPower.WATT: 'W'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.tlx123456_battery_2_discharging_w',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_total_sensors_classic_api[sensor.tlx123456_energy_today-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.tlx123456_energy_today',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Energy today',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'tlx_energy_today',
    'unique_id': 'TLX123456-tlx_energy_today',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_total_sensors_classic_api[sensor.tlx123456_energy_today-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'TLX123456 Energy today',
      'icon': 'mdi:solar-power',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.tlx123456_energy_today',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_total_sensors_classic_api[sensor.tlx123456_energy_today_input_1-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.tlx123456_energy_today_input_1',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Energy today input 1',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'tlx_energy_today_input_1',
    'unique_id': 'TLX123456-tlx_energy_today_input_1',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_total_sensors_classic_api[sensor.tlx123456_energy_today_input_1-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'TLX123456 Energy today input 1',
      'icon': 'mdi:solar-power',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.tlx123456_energy_today_input_1',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_total_sensors_classic_api[sensor.tlx123456_energy_today_input_2-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.tlx123456_energy_today_input_2',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Energy today input 2',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'tlx_energy_today_input_2',
    'unique_id': 'TLX123456-tlx_energy_today_input_2',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_total_sensors_classic_api[sensor.tlx123456_energy_today_input_2-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'TLX123456 Energy today input 2',
      'icon': 'mdi:solar-power',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.tlx123456_energy_today_input_2',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_total_sensors_classic_api[sensor.tlx123456_energy_today_input_3-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.tlx123456_energy_today_input_3',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Energy today input 3',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'tlx_energy_today_input_3',
    'unique_id': 'TLX123456-tlx_energy_today_input_3',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_total_sensors_classic_api[sensor.tlx123456_energy_today_input_3-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'TLX123456 Energy today input 3',
      'icon': 'mdi:solar-power',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.tlx123456_energy_today_input_3',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_total_sensors_classic_api[sensor.tlx123456_energy_today_input_4-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.tlx123456_energy_today_input_4',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Energy today input 4',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'tlx_energy_today_input_4',
    'unique_id': 'TLX123456-tlx_energy_today_input_4',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_total_sensors_classic_api[sensor.tlx123456_energy_today_input_4-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'TLX123456 Energy today input 4',
      'icon': 'mdi:solar-power',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.tlx123456_energy_today_input_4',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_total_sensors_classic_api[sensor.tlx123456_export_power-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.tlx123456_export_power',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 0,
      }),
    }),
    'original_device_class': <SensorDeviceClass.POWER: 'power'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Export power',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'tlx_pac_to_grid_total',
    'unique_id': 'TLX123456-tlx_pac_to_grid_total',
    'unit_of_measurement': <UnitOfPower.WATT: 'W'>,
  })
# ---
# name: test_total_sensors_classic_api[sensor.tlx123456_export_power-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'power',
      'friendly_name': 'TLX123456 Export power',
      'icon': 'mdi:solar-power',
      'unit_of_measurement': <UnitOfPower.WATT: 'W'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.tlx123456_export_power',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_total_sensors_classic_api[sensor.tlx123456_export_to_grid_today-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.tlx123456_export_to_grid_today',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Export to grid today',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'tlx_export_to_grid_today',
    'unique_id': 'TLX123456-tlx_export_to_grid_today',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_total_sensors_classic_api[sensor.tlx123456_export_to_grid_today-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'TLX123456 Export to grid today',
      'icon': 'mdi:solar-power',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.tlx123456_export_to_grid_today',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_total_sensors_classic_api[sensor.tlx123456_import_from_grid_today-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.tlx123456_import_from_grid_today',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Import from grid today',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'tlx_import_from_grid_today',
    'unique_id': 'TLX123456-tlx_import_from_grid_today',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_total_sensors_classic_api[sensor.tlx123456_import_from_grid_today-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'TLX123456 Import from grid today',
      'icon': 'mdi:solar-power',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.tlx123456_import_from_grid_today',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_total_sensors_classic_api[sensor.tlx123456_import_power-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.tlx123456_import_power',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 0,
      }),
    }),
    'original_device_class': <SensorDeviceClass.POWER: 'power'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Import power',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'tlx_pac_to_user_total',
    'unique_id': 'TLX123456-tlx_pac_to_user_total',
    'unit_of_measurement': <UnitOfPower.WATT: 'W'>,
  })
# ---
# name: test_total_sensors_classic_api[sensor.tlx123456_import_power-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'power',
      'friendly_name': 'TLX123456 Import power',
      'icon': 'mdi:solar-power',
      'unit_of_measurement': <UnitOfPower.WATT: 'W'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.tlx123456_import_power',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_total_sensors_classic_api[sensor.tlx123456_input_1_amperage-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.tlx123456_input_1_amperage',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.CURRENT: 'current'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Input 1 amperage',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'tlx_amperage_input_1',
    'unique_id': 'TLX123456-tlx_amperage_input_1',
    'unit_of_measurement': <UnitOfElectricCurrent.AMPERE: 'A'>,
  })
# ---
# name: test_total_sensors_classic_api[sensor.tlx123456_input_1_amperage-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'current',
      'friendly_name': 'TLX123456 Input 1 amperage',
      'icon': 'mdi:solar-power',
      'unit_of_measurement': <UnitOfElectricCurrent.AMPERE: 'A'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.tlx123456_input_1_amperage',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_total_sensors_classic_api[sensor.tlx123456_input_1_voltage-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.tlx123456_input_1_voltage',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 0,
      }),
    }),
    'original_device_class': <SensorDeviceClass.VOLTAGE: 'voltage'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Input 1 voltage',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'tlx_voltage_input_1',
    'unique_id': 'TLX123456-tlx_voltage_input_1',
    'unit_of_measurement': <UnitOfElectricPotential.VOLT: 'V'>,
  })
# ---
# name: test_total_sensors_classic_api[sensor.tlx123456_input_1_voltage-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'voltage',
      'friendly_name': 'TLX123456 Input 1 voltage',
      'icon': 'mdi:solar-power',
      'unit_of_measurement': <UnitOfElectricPotential.VOLT: 'V'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.tlx123456_input_1_voltage',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_total_sensors_classic_api[sensor.tlx123456_input_1_wattage-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.tlx123456_input_1_wattage',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 0,
      }),
    }),
    'original_device_class': <SensorDeviceClass.POWER: 'power'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Input 1 wattage',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'tlx_wattage_input_1',
    'unique_id': 'TLX123456-tlx_wattage_input_1',
    'unit_of_measurement': <UnitOfPower.WATT: 'W'>,
  })
# ---
# name: test_total_sensors_classic_api[sensor.tlx123456_input_1_wattage-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'power',
      'friendly_name': 'TLX123456 Input 1 wattage',
      'icon': 'mdi:solar-power',
      'unit_of_measurement': <UnitOfPower.WATT: 'W'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.tlx123456_input_1_wattage',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_total_sensors_classic_api[sensor.tlx123456_input_2_amperage-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.tlx123456_input_2_amperage',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.CURRENT: 'current'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Input 2 amperage',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'tlx_amperage_input_2',
    'unique_id': 'TLX123456-tlx_amperage_input_2',
    'unit_of_measurement': <UnitOfElectricCurrent.AMPERE: 'A'>,
  })
# ---
# name: test_total_sensors_classic_api[sensor.tlx123456_input_2_amperage-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'current',
      'friendly_name': 'TLX123456 Input 2 amperage',
      'icon': 'mdi:solar-power',
      'unit_of_measurement': <UnitOfElectricCurrent.AMPERE: 'A'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.tlx123456_input_2_amperage',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_total_sensors_classic_api[sensor.tlx123456_input_2_voltage-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.tlx123456_input_2_voltage',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 0,
      }),
    }),
    'original_device_class': <SensorDeviceClass.VOLTAGE: 'voltage'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Input 2 voltage',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'tlx_voltage_input_2',
    'unique_id': 'TLX123456-tlx_voltage_input_2',
    'unit_of_measurement': <UnitOfElectricPotential.VOLT: 'V'>,
  })
# ---
# name: test_total_sensors_classic_api[sensor.tlx123456_input_2_voltage-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'voltage',
      'friendly_name': 'TLX123456 Input 2 voltage',
      'icon': 'mdi:solar-power',
      'unit_of_measurement': <UnitOfElectricPotential.VOLT: 'V'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.tlx123456_input_2_voltage',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_total_sensors_classic_api[sensor.tlx123456_input_2_wattage-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.tlx123456_input_2_wattage',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 0,
      }),
    }),
    'original_device_class': <SensorDeviceClass.POWER: 'power'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Input 2 wattage',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'tlx_wattage_input_2',
    'unique_id': 'TLX123456-tlx_wattage_input_2',
    'unit_of_measurement': <UnitOfPower.WATT: 'W'>,
  })
# ---
# name: test_total_sensors_classic_api[sensor.tlx123456_input_2_wattage-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'power',
      'friendly_name': 'TLX123456 Input 2 wattage',
      'icon': 'mdi:solar-power',
      'unit_of_measurement': <UnitOfPower.WATT: 'W'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.tlx123456_input_2_wattage',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_total_sensors_classic_api[sensor.tlx123456_input_3_amperage-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.tlx123456_input_3_amperage',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.CURRENT: 'current'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Input 3 amperage',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'tlx_amperage_input_3',
    'unique_id': 'TLX123456-tlx_amperage_input_3',
    'unit_of_measurement': <UnitOfElectricCurrent.AMPERE: 'A'>,
  })
# ---
# name: test_total_sensors_classic_api[sensor.tlx123456_input_3_amperage-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'current',
      'friendly_name': 'TLX123456 Input 3 amperage',
      'icon': 'mdi:solar-power',
      'unit_of_measurement': <UnitOfElectricCurrent.AMPERE: 'A'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.tlx123456_input_3_amperage',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_total_sensors_classic_api[sensor.tlx123456_input_3_voltage-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.tlx123456_input_3_voltage',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 0,
      }),
    }),
    'original_device_class': <SensorDeviceClass.VOLTAGE: 'voltage'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Input 3 voltage',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'tlx_voltage_input_3',
    'unique_id': 'TLX123456-tlx_voltage_input_3',
    'unit_of_measurement': <UnitOfElectricPotential.VOLT: 'V'>,
  })
# ---
# name: test_total_sensors_classic_api[sensor.tlx123456_input_3_voltage-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'voltage',
      'friendly_name': 'TLX123456 Input 3 voltage',
      'icon': 'mdi:solar-power',
      'unit_of_measurement': <UnitOfElectricPotential.VOLT: 'V'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.tlx123456_input_3_voltage',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_total_sensors_classic_api[sensor.tlx123456_input_3_wattage-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.tlx123456_input_3_wattage',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 0,
      }),
    }),
    'original_device_class': <SensorDeviceClass.POWER: 'power'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Input 3 wattage',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'tlx_wattage_input_3',
    'unique_id': 'TLX123456-tlx_wattage_input_3',
    'unit_of_measurement': <UnitOfPower.WATT: 'W'>,
  })
# ---
# name: test_total_sensors_classic_api[sensor.tlx123456_input_3_wattage-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'power',
      'friendly_name': 'TLX123456 Input 3 wattage',
      'icon': 'mdi:solar-power',
      'unit_of_measurement': <UnitOfPower.WATT: 'W'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.tlx123456_input_3_wattage',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_total_sensors_classic_api[sensor.tlx123456_input_4_amperage-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.tlx123456_input_4_amperage',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.CURRENT: 'current'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Input 4 amperage',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'tlx_amperage_input_4',
    'unique_id': 'TLX123456-tlx_amperage_input_4',
    'unit_of_measurement': <UnitOfElectricCurrent.AMPERE: 'A'>,
  })
# ---
# name: test_total_sensors_classic_api[sensor.tlx123456_input_4_amperage-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'current',
      'friendly_name': 'TLX123456 Input 4 amperage',
      'icon': 'mdi:solar-power',
      'unit_of_measurement': <UnitOfElectricCurrent.AMPERE: 'A'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.tlx123456_input_4_amperage',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_total_sensors_classic_api[sensor.tlx123456_input_4_voltage-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.tlx123456_input_4_voltage',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 0,
      }),
    }),
    'original_device_class': <SensorDeviceClass.VOLTAGE: 'voltage'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Input 4 voltage',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'tlx_voltage_input_4',
    'unique_id': 'TLX123456-tlx_voltage_input_4',
    'unit_of_measurement': <UnitOfElectricPotential.VOLT: 'V'>,
  })
# ---
# name: test_total_sensors_classic_api[sensor.tlx123456_input_4_voltage-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'voltage',
      'friendly_name': 'TLX123456 Input 4 voltage',
      'icon': 'mdi:solar-power',
      'unit_of_measurement': <UnitOfElectricPotential.VOLT: 'V'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.tlx123456_input_4_voltage',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_total_sensors_classic_api[sensor.tlx123456_input_4_wattage-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.tlx123456_input_4_wattage',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 0,
      }),
    }),
    'original_device_class': <SensorDeviceClass.POWER: 'power'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Input 4 wattage',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'tlx_wattage_input_4',
    'unique_id': 'TLX123456-tlx_wattage_input_4',
    'unit_of_measurement': <UnitOfPower.WATT: 'W'>,
  })
# ---
# name: test_total_sensors_classic_api[sensor.tlx123456_input_4_wattage-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'power',
      'friendly_name': 'TLX123456 Input 4 wattage',
      'icon': 'mdi:solar-power',
      'unit_of_measurement': <UnitOfPower.WATT: 'W'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.tlx123456_input_4_wattage',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_total_sensors_classic_api[sensor.tlx123456_internal_wattage-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.tlx123456_internal_wattage',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 0,
      }),
    }),
    'original_device_class': <SensorDeviceClass.POWER: 'power'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Internal wattage',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'tlx_internal_wattage',
    'unique_id': 'TLX123456-tlx_internal_wattage',
    'unit_of_measurement': <UnitOfPower.WATT: 'W'>,
  })
# ---
# name: test_total_sensors_classic_api[sensor.tlx123456_internal_wattage-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'power',
      'friendly_name': 'TLX123456 Internal wattage',
      'icon': 'mdi:solar-power',
      'unit_of_measurement': <UnitOfPower.WATT: 'W'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.tlx123456_internal_wattage',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_total_sensors_classic_api[sensor.tlx123456_lifetime_batteries_charged_from_grid-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.tlx123456_lifetime_batteries_charged_from_grid',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Lifetime batteries charged from grid',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'tlx_batteries_charged_from_grid_total',
    'unique_id': 'TLX123456-tlx_batteries_charged_from_grid_total',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_total_sensors_classic_api[sensor.tlx123456_lifetime_batteries_charged_from_grid-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'TLX123456 Lifetime batteries charged from grid',
      'icon': 'mdi:solar-power',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.tlx123456_lifetime_batteries_charged_from_grid',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_total_sensors_classic_api[sensor.tlx123456_lifetime_energy_output-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.tlx123456_lifetime_energy_output',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Lifetime energy output',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'tlx_energy_total',
    'unique_id': 'TLX123456-tlx_energy_total',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_total_sensors_classic_api[sensor.tlx123456_lifetime_energy_output-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'TLX123456 Lifetime energy output',
      'icon': 'mdi:solar-power',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.tlx123456_lifetime_energy_output',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_total_sensors_classic_api[sensor.tlx123456_lifetime_import_from_grid-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.tlx123456_lifetime_import_from_grid',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Lifetime import from grid',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'tlx_import_from_grid_total',
    'unique_id': 'TLX123456-tlx_import_from_grid_total',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_total_sensors_classic_api[sensor.tlx123456_lifetime_import_from_grid-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'TLX123456 Lifetime import from grid',
      'icon': 'mdi:solar-power',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.tlx123456_lifetime_import_from_grid',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_total_sensors_classic_api[sensor.tlx123456_lifetime_self_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.tlx123456_lifetime_self_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Lifetime self consumption',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'tlx_self_consumption_total',
    'unique_id': 'TLX123456-tlx_self_consumption_total',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_total_sensors_classic_api[sensor.tlx123456_lifetime_self_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'TLX123456 Lifetime self consumption',
      'icon': 'mdi:solar-power',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.tlx123456_lifetime_self_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_total_sensors_classic_api[sensor.tlx123456_lifetime_system_production-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.tlx123456_lifetime_system_production',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Lifetime system production',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'tlx_system_production_total',
    'unique_id': 'TLX123456-tlx_system_production_total',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_total_sensors_classic_api[sensor.tlx123456_lifetime_system_production-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'TLX123456 Lifetime system production',
      'icon': 'mdi:solar-power',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.tlx123456_lifetime_system_production',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_total_sensors_classic_api[sensor.tlx123456_lifetime_total_all_batteries_charged-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.tlx123456_lifetime_total_all_batteries_charged',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Lifetime total all batteries charged',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'tlx_all_batteries_charge_total',
    'unique_id': 'TLX123456-tlx_all_batteries_charge_total',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_total_sensors_classic_api[sensor.tlx123456_lifetime_total_all_batteries_charged-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'TLX123456 Lifetime total all batteries charged',
      'icon': 'mdi:solar-power',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.tlx123456_lifetime_total_all_batteries_charged',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_total_sensors_classic_api[sensor.tlx123456_lifetime_total_all_batteries_discharged-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.tlx123456_lifetime_total_all_batteries_discharged',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Lifetime total all batteries discharged',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'tlx_all_batteries_discharge_total',
    'unique_id': 'TLX123456-tlx_all_batteries_discharge_total',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_total_sensors_classic_api[sensor.tlx123456_lifetime_total_all_batteries_discharged-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'TLX123456 Lifetime total all batteries discharged',
      'icon': 'mdi:solar-power',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.tlx123456_lifetime_total_all_batteries_discharged',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_total_sensors_classic_api[sensor.tlx123456_lifetime_total_battery_1_charged-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.tlx123456_lifetime_total_battery_1_charged',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Lifetime total battery 1 charged',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'tlx_battery_1_charge_total',
    'unique_id': 'TLX123456-tlx_battery_1_charge_total',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_total_sensors_classic_api[sensor.tlx123456_lifetime_total_battery_1_charged-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'TLX123456 Lifetime total battery 1 charged',
      'icon': 'mdi:solar-power',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.tlx123456_lifetime_total_battery_1_charged',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_total_sensors_classic_api[sensor.tlx123456_lifetime_total_battery_1_discharged-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.tlx123456_lifetime_total_battery_1_discharged',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Lifetime total battery 1 discharged',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'tlx_battery_1_discharge_total',
    'unique_id': 'TLX123456-tlx_battery_1_discharge_total',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_total_sensors_classic_api[sensor.tlx123456_lifetime_total_battery_1_discharged-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'TLX123456 Lifetime total battery 1 discharged',
      'icon': 'mdi:solar-power',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.tlx123456_lifetime_total_battery_1_discharged',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_total_sensors_classic_api[sensor.tlx123456_lifetime_total_battery_2_charged-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.tlx123456_lifetime_total_battery_2_charged',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Lifetime total battery 2 charged',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'tlx_battery_2_charge_total',
    'unique_id': 'TLX123456-tlx_battery_2_charge_total',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_total_sensors_classic_api[sensor.tlx123456_lifetime_total_battery_2_charged-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'TLX123456 Lifetime total battery 2 charged',
      'icon': 'mdi:solar-power',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.tlx123456_lifetime_total_battery_2_charged',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_total_sensors_classic_api[sensor.tlx123456_lifetime_total_battery_2_discharged-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.tlx123456_lifetime_total_battery_2_discharged',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Lifetime total battery 2 discharged',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'tlx_battery_2_discharge_total',
    'unique_id': 'TLX123456-tlx_battery_2_discharge_total',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_total_sensors_classic_api[sensor.tlx123456_lifetime_total_battery_2_discharged-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'TLX123456 Lifetime total battery 2 discharged',
      'icon': 'mdi:solar-power',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.tlx123456_lifetime_total_battery_2_discharged',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_total_sensors_classic_api[sensor.tlx123456_lifetime_total_energy_input_1-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.tlx123456_lifetime_total_energy_input_1',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Lifetime total energy input 1',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'tlx_energy_total_input_1',
    'unique_id': 'TLX123456-tlx_energy_total_input_1',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_total_sensors_classic_api[sensor.tlx123456_lifetime_total_energy_input_1-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'TLX123456 Lifetime total energy input 1',
      'icon': 'mdi:solar-power',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.tlx123456_lifetime_total_energy_input_1',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_total_sensors_classic_api[sensor.tlx123456_lifetime_total_energy_input_2-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.tlx123456_lifetime_total_energy_input_2',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Lifetime total energy input 2',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'tlx_energy_total_input_2',
    'unique_id': 'TLX123456-tlx_energy_total_input_2',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_total_sensors_classic_api[sensor.tlx123456_lifetime_total_energy_input_2-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'TLX123456 Lifetime total energy input 2',
      'icon': 'mdi:solar-power',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.tlx123456_lifetime_total_energy_input_2',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_total_sensors_classic_api[sensor.tlx123456_lifetime_total_energy_input_3-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.tlx123456_lifetime_total_energy_input_3',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Lifetime total energy input 3',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'tlx_energy_total_input_3',
    'unique_id': 'TLX123456-tlx_energy_total_input_3',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_total_sensors_classic_api[sensor.tlx123456_lifetime_total_energy_input_3-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'TLX123456 Lifetime total energy input 3',
      'icon': 'mdi:solar-power',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.tlx123456_lifetime_total_energy_input_3',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_total_sensors_classic_api[sensor.tlx123456_lifetime_total_energy_input_4-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.tlx123456_lifetime_total_energy_input_4',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Lifetime total energy input 4',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'tlx_energy_total_input_4',
    'unique_id': 'TLX123456-tlx_energy_total_input_4',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_total_sensors_classic_api[sensor.tlx123456_lifetime_total_energy_input_4-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'TLX123456 Lifetime total energy input 4',
      'icon': 'mdi:solar-power',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.tlx123456_lifetime_total_energy_input_4',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_total_sensors_classic_api[sensor.tlx123456_lifetime_total_export_to_grid-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.tlx123456_lifetime_total_export_to_grid',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Lifetime total export to grid',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'tlx_export_to_grid_total',
    'unique_id': 'TLX123456-tlx_export_to_grid_total',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_total_sensors_classic_api[sensor.tlx123456_lifetime_total_export_to_grid-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'TLX123456 Lifetime total export to grid',
      'icon': 'mdi:solar-power',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.tlx123456_lifetime_total_export_to_grid',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_total_sensors_classic_api[sensor.tlx123456_lifetime_total_load_consumption-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.tlx123456_lifetime_total_load_consumption',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Lifetime total load consumption',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'mix_load_consumption_total',
    'unique_id': 'TLX123456-mix_load_consumption_total',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_total_sensors_classic_api[sensor.tlx123456_lifetime_total_load_consumption-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'TLX123456 Lifetime total load consumption',
      'icon': 'mdi:solar-power',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.tlx123456_lifetime_total_load_consumption',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_total_sensors_classic_api[sensor.tlx123456_lifetime_total_solar_energy-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.tlx123456_lifetime_total_solar_energy',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Lifetime total solar energy',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'tlx_solar_generation_total',
    'unique_id': 'TLX123456-tlx_solar_generation_total',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_total_sensors_classic_api[sensor.tlx123456_lifetime_total_solar_energy-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'TLX123456 Lifetime total solar energy',
      'icon': 'mdi:solar-power',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.tlx123456_lifetime_total_solar_energy',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_total_sensors_classic_api[sensor.tlx123456_load_consumption_today-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.tlx123456_load_consumption_today',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Load consumption today',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'tlx_load_consumption_today',
    'unique_id': 'TLX123456-tlx_load_consumption_today',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_total_sensors_classic_api[sensor.tlx123456_load_consumption_today-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'TLX123456 Load consumption today',
      'icon': 'mdi:solar-power',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.tlx123456_load_consumption_today',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_total_sensors_classic_api[sensor.tlx123456_local_load_power-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.tlx123456_local_load_power',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 0,
      }),
    }),
    'original_device_class': <SensorDeviceClass.POWER: 'power'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Local load power',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'tlx_pac_to_local_load',
    'unique_id': 'TLX123456-tlx_pac_to_local_load',
    'unit_of_measurement': <UnitOfPower.WATT: 'W'>,
  })
# ---
# name: test_total_sensors_classic_api[sensor.tlx123456_local_load_power-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'power',
      'friendly_name': 'TLX123456 Local load power',
      'icon': 'mdi:solar-power',
      'unit_of_measurement': <UnitOfPower.WATT: 'W'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.tlx123456_local_load_power',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_total_sensors_classic_api[sensor.tlx123456_output_power-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.tlx123456_output_power',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 0,
      }),
    }),
    'original_device_class': <SensorDeviceClass.POWER: 'power'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Output power',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'tlx_current_wattage',
    'unique_id': 'TLX123456-tlx_current_wattage',
    'unit_of_measurement': <UnitOfPower.WATT: 'W'>,
  })
# ---
# name: test_total_sensors_classic_api[sensor.tlx123456_output_power-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'power',
      'friendly_name': 'TLX123456 Output power',
      'icon': 'mdi:solar-power',
      'unit_of_measurement': <UnitOfPower.WATT: 'W'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.tlx123456_output_power',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_total_sensors_classic_api[sensor.tlx123456_reactive_voltage-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.tlx123456_reactive_voltage',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 0,
      }),
    }),
    'original_device_class': <SensorDeviceClass.VOLTAGE: 'voltage'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Reactive voltage',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'tlx_reactive_voltage',
    'unique_id': 'TLX123456-tlx_reactive_voltage',
    'unit_of_measurement': <UnitOfElectricPotential.VOLT: 'V'>,
  })
# ---
# name: test_total_sensors_classic_api[sensor.tlx123456_reactive_voltage-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'voltage',
      'friendly_name': 'TLX123456 Reactive voltage',
      'icon': 'mdi:solar-power',
      'unit_of_measurement': <UnitOfElectricPotential.VOLT: 'V'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.tlx123456_reactive_voltage',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_total_sensors_classic_api[sensor.tlx123456_self_consumption_today-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.tlx123456_self_consumption_today',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Self consumption today',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'tlx_self_consumption_today',
    'unique_id': 'TLX123456-tlx_self_consumption_today',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_total_sensors_classic_api[sensor.tlx123456_self_consumption_today-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'TLX123456 Self consumption today',
      'icon': 'mdi:solar-power',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.tlx123456_self_consumption_today',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_total_sensors_classic_api[sensor.tlx123456_self_power-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.tlx123456_self_power',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 0,
      }),
    }),
    'original_device_class': <SensorDeviceClass.POWER: 'power'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Self power',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'tlx_p_self',
    'unique_id': 'TLX123456-tlx_p_self',
    'unit_of_measurement': <UnitOfPower.WATT: 'W'>,
  })
# ---
# name: test_total_sensors_classic_api[sensor.tlx123456_self_power-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'power',
      'friendly_name': 'TLX123456 Self power',
      'icon': 'mdi:solar-power',
      'unit_of_measurement': <UnitOfPower.WATT: 'W'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.tlx123456_self_power',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_total_sensors_classic_api[sensor.tlx123456_solar_energy_today-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.tlx123456_solar_energy_today',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Solar energy today',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'tlx_solar_generation_today',
    'unique_id': 'TLX123456-tlx_solar_generation_today',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_total_sensors_classic_api[sensor.tlx123456_solar_energy_today-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'TLX123456 Solar energy today',
      'icon': 'mdi:solar-power',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.tlx123456_solar_energy_today',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_total_sensors_classic_api[sensor.tlx123456_state_of_charge_soc-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.tlx123456_state_of_charge_soc',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
    }),
    'original_device_class': <SensorDeviceClass.BATTERY: 'battery'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'State of charge (SoC)',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'tlx_statement_of_charge',
    'unique_id': 'TLX123456-tlx_statement_of_charge',
    'unit_of_measurement': '%',
  })
# ---
# name: test_total_sensors_classic_api[sensor.tlx123456_state_of_charge_soc-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'battery',
      'friendly_name': 'TLX123456 State of charge (SoC)',
      'icon': 'mdi:solar-power',
      'unit_of_measurement': '%',
    }),
    'context': <ANY>,
    'entity_id': 'sensor.tlx123456_state_of_charge_soc',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_total_sensors_classic_api[sensor.tlx123456_system_power-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.tlx123456_system_power',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 0,
      }),
    }),
    'original_device_class': <SensorDeviceClass.POWER: 'power'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'System power',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'tlx_p_system',
    'unique_id': 'TLX123456-tlx_p_system',
    'unit_of_measurement': <UnitOfPower.WATT: 'W'>,
  })
# ---
# name: test_total_sensors_classic_api[sensor.tlx123456_system_power-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'power',
      'friendly_name': 'TLX123456 System power',
      'icon': 'mdi:solar-power',
      'unit_of_measurement': <UnitOfPower.WATT: 'W'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.tlx123456_system_power',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_total_sensors_classic_api[sensor.tlx123456_system_production_today-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': dict({
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
    }),
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.tlx123456_system_production_today',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 2,
      }),
    }),
    'original_device_class': <SensorDeviceClass.ENERGY: 'energy'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'System production today',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'tlx_system_production_today',
    'unique_id': 'TLX123456-tlx_system_production_today',
    'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
  })
# ---
# name: test_total_sensors_classic_api[sensor.tlx123456_system_production_today-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'energy',
      'friendly_name': 'TLX123456 System production today',
      'icon': 'mdi:solar-power',
      'state_class': <SensorStateClass.TOTAL_INCREASING: 'total_increasing'>,
      'unit_of_measurement': <UnitOfEnergy.KILO_WATT_HOUR: 'kWh'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.tlx123456_system_production_today',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_total_sensors_classic_api[sensor.tlx123456_temperature_1-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.tlx123456_temperature_1',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 1,
      }),
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Temperature 1',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'tlx_temperature_1',
    'unique_id': 'TLX123456-tlx_temperature_1',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_total_sensors_classic_api[sensor.tlx123456_temperature_1-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'TLX123456 Temperature 1',
      'icon': 'mdi:solar-power',
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.tlx123456_temperature_1',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_total_sensors_classic_api[sensor.tlx123456_temperature_2-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.tlx123456_temperature_2',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 1,
      }),
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Temperature 2',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'tlx_temperature_2',
    'unique_id': 'TLX123456-tlx_temperature_2',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_total_sensors_classic_api[sensor.tlx123456_temperature_2-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'TLX123456 Temperature 2',
      'icon': 'mdi:solar-power',
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.tlx123456_temperature_2',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_total_sensors_classic_api[sensor.tlx123456_temperature_3-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.tlx123456_temperature_3',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 1,
      }),
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Temperature 3',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'tlx_temperature_3',
    'unique_id': 'TLX123456-tlx_temperature_3',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_total_sensors_classic_api[sensor.tlx123456_temperature_3-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'TLX123456 Temperature 3',
      'icon': 'mdi:solar-power',
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.tlx123456_temperature_3',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_total_sensors_classic_api[sensor.tlx123456_temperature_4-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.tlx123456_temperature_4',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 1,
      }),
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Temperature 4',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'tlx_temperature_4',
    'unique_id': 'TLX123456-tlx_temperature_4',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_total_sensors_classic_api[sensor.tlx123456_temperature_4-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'TLX123456 Temperature 4',
      'icon': 'mdi:solar-power',
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.tlx123456_temperature_4',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---
# name: test_total_sensors_classic_api[sensor.tlx123456_temperature_5-entry]
  EntityRegistryEntrySnapshot({
    'aliases': set({
    }),
    'area_id': None,
    'capabilities': None,
    'config_entry_id': <ANY>,
    'config_subentry_id': <ANY>,
    'device_class': None,
    'device_id': <ANY>,
    'disabled_by': None,
    'domain': 'sensor',
    'entity_category': None,
    'entity_id': 'sensor.tlx123456_temperature_5',
    'has_entity_name': True,
    'hidden_by': None,
    'icon': None,
    'id': <ANY>,
    'labels': set({
    }),
    'name': None,
    'options': dict({
      'sensor': dict({
        'suggested_display_precision': 1,
      }),
    }),
    'original_device_class': <SensorDeviceClass.TEMPERATURE: 'temperature'>,
    'original_icon': 'mdi:solar-power',
    'original_name': 'Temperature 5',
    'platform': 'growatt_server',
    'previous_unique_id': None,
    'suggested_object_id': None,
    'supported_features': 0,
    'translation_key': 'tlx_temperature_5',
    'unique_id': 'TLX123456-tlx_temperature_5',
    'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
  })
# ---
# name: test_total_sensors_classic_api[sensor.tlx123456_temperature_5-state]
  StateSnapshot({
    'attributes': ReadOnlyDict({
      'device_class': 'temperature',
      'friendly_name': 'TLX123456 Temperature 5',
      'icon': 'mdi:solar-power',
      'unit_of_measurement': <UnitOfTemperature.CELSIUS: '°C'>,
    }),
    'context': <ANY>,
    'entity_id': 'sensor.tlx123456_temperature_5',
    'last_changed': <ANY>,
    'last_reported': <ANY>,
    'last_updated': <ANY>,
    'state': 'unknown',
  })
# ---

{
  "config": {
    "abort": {
      "already_configured": "[%key:common::config_flow::abort::already_configured_account%]",
      "reauth_successful": "[%key:common::config_flow::abort::reauth_successful%]",
      "reconfigure_successful": "[%key:common::config_flow::abort::reconfigure_successful%]"
    },
    "error": {
      "cannot_connect": "[%key:common::config_flow::error::cannot_connect%]",
      "incorrect_api_key": "The provided API key does not match for this account",
      "invalid_auth": "[%key:common::config_flow::error::invalid_auth%]",
      "no_devices": "No devices found, ensure your Sensibo devices are correctly set up and have a remote defined",
      "no_username": "Could not retrieve username, ensure your Sensibo account has a proper username and try again"
    },
    "step": {
      "reauth_confirm": {
        "data": {
          "api_key": "[%key:common::config_flow::data::api_key%]"
        },
        "data_description": {
          "api_key": "[%key:component::sensibo::config::step::user::data_description::api_key%]"
        }
      },
      "reconfigure": {
        "data": {
          "api_key": "[%key:common::config_flow::data::api_key%]"
        },
        "data_description": {
          "api_key": "[%key:component::sensibo::config::step::user::data_description::api_key%]"
        }
      },
      "user": {
        "data": {
          "api_key": "[%key:common::config_flow::data::api_key%]"
        },
        "data_description": {
          "api_key": "Follow the [documentation]({url}) to get your API key"
        }
      }
    }
  },
  "entity": {
    "binary_sensor": {
      "filter_clean": {
        "name": "Filter clean required"
      },
      "is_main_sensor": {
        "name": "Main sensor"
      },
      "pure_ac_integration": {
        "name": "Pure Boost linked with AC"
      },
      "pure_geo_integration": {
        "name": "Pure Boost linked with presence"
      },
      "pure_measure_integration": {
        "name": "Pure Boost linked with indoor air quality"
      },
      "pure_prime_integration": {
        "name": "Pure Boost linked with outdoor air quality"
      },
      "room_occupied": {
        "name": "Room occupied"
      }
    },
    "button": {
      "reset_filter": {
        "name": "Reset filter"
      }
    },
    "climate": {
      "climate_device": {
        "state_attributes": {
          "fan_mode": {
            "state": {
              "auto": "[%key:common::state::auto%]",
              "high": "[%key:common::state::high%]",
              "low": "[%key:common::state::low%]",
              "medium": "[%key:common::state::medium%]",
              "medium_high": "[%key:component::sensibo::entity::sensor::climate_react_low::state_attributes::fanlevel::state::medium_high%]",
              "medium_low": "[%key:component::sensibo::entity::sensor::climate_react_low::state_attributes::fanlevel::state::medium_low%]",
              "quiet": "[%key:component::sensibo::entity::sensor::climate_react_low::state_attributes::fanlevel::state::quiet%]",
              "strong": "[%key:component::sensibo::entity::sensor::climate_react_low::state_attributes::fanlevel::state::strong%]"
            }
          },
          "swing_horizontal_mode": {
            "state": {
              "fixedcenter": "[%key:component::sensibo::entity::sensor::climate_react_low::state_attributes::horizontalswing::state::fixedcenter%]",
              "fixedcenterleft": "[%key:component::sensibo::entity::sensor::climate_react_low::state_attributes::horizontalswing::state::fixedcenterleft%]",
              "fixedcenterright": "[%key:component::sensibo::entity::sensor::climate_react_low::state_attributes::horizontalswing::state::fixedcenterright%]",
              "fixedleft": "[%key:component::sensibo::entity::sensor::climate_react_low::state_attributes::horizontalswing::state::fixedleft%]",
              "fixedleftright": "[%key:component::sensibo::entity::sensor::climate_react_low::state_attributes::horizontalswing::state::fixedleftright%]",
              "fixedright": "[%key:component::sensibo::entity::sensor::climate_react_low::state_attributes::horizontalswing::state::fixedright%]",
              "rangecenter": "[%key:component::sensibo::entity::sensor::climate_react_low::state_attributes::horizontalswing::state::rangecenter%]",
              "rangefull": "[%key:component::sensibo::entity::sensor::climate_react_low::state_attributes::horizontalswing::state::rangefull%]",
              "rangeleft": "[%key:component::sensibo::entity::sensor::climate_react_low::state_attributes::horizontalswing::state::rangeleft%]",
              "rangeright": "[%key:component::sensibo::entity::sensor::climate_react_low::state_attributes::horizontalswing::state::rangeright%]",
              "stopped": "[%key:common::state::off%]"
            }
          },
          "swing_mode": {
            "state": {
              "both": "[%key:component::climate::entity_component::_::state_attributes::swing_mode::state::both%]",
              "fixedbottom": "[%key:component::sensibo::entity::sensor::climate_react_low::state_attributes::swing::state::fixedbottom%]",
              "fixedmiddle": "[%key:component::sensibo::entity::sensor::climate_react_low::state_attributes::swing::state::fixedmiddle%]",
              "fixedmiddlebottom": "[%key:component::sensibo::entity::sensor::climate_react_low::state_attributes::swing::state::fixedmiddlebottom%]",
              "fixedmiddletop": "[%key:component::sensibo::entity::sensor::climate_react_low::state_attributes::swing::state::fixedmiddletop%]",
              "fixedtop": "[%key:component::sensibo::entity::sensor::climate_react_low::state_attributes::swing::state::fixedtop%]",
              "horizontal": "[%key:component::sensibo::entity::sensor::climate_react_low::state_attributes::swing::state::horizontal%]",
              "rangebottom": "[%key:component::sensibo::entity::sensor::climate_react_low::state_attributes::swing::state::rangebottom%]",
              "rangefull": "[%key:component::sensibo::entity::sensor::climate_react_low::state_attributes::horizontalswing::state::rangefull%]",
              "rangemiddle": "[%key:component::sensibo::entity::sensor::climate_react_low::state_attributes::swing::state::rangemiddle%]",
              "rangetop": "[%key:component::sensibo::entity::sensor::climate_react_low::state_attributes::swing::state::rangetop%]",
              "stopped": "[%key:common::state::off%]"
            }
          }
        }
      }
    },
    "number": {
      "calibration_humidity": {
        "name": "Humidity calibration"
      },
      "calibration_temperature": {
        "name": "Temperature calibration"
      }
    },
    "select": {
      "light": {
        "name": "[%key:component::light::title%]",
        "state": {
          "dim": "Dim",
          "off": "[%key:common::state::off%]",
          "on": "[%key:common::state::on%]"
        }
      }
    },
    "sensor": {
      "airq_co2": {
        "name": "AirQ CO2"
      },
      "airq_tvoc": {
        "name": "AirQ TVOC"
      },
      "battery_voltage": {
        "name": "Battery voltage"
      },
      "climate_react_high": {
        "name": "Climate React high temperature threshold",
        "state_attributes": {
          "fanlevel": {
            "name": "[%key:component::climate::entity_component::_::state_attributes::fan_mode::name%]",
            "state": {
              "auto": "[%key:common::state::auto%]",
              "high": "[%key:common::state::high%]",
              "low": "[%key:common::state::low%]",
              "medium": "[%key:common::state::medium%]",
              "medium_high": "[%key:component::sensibo::entity::sensor::climate_react_low::state_attributes::fanlevel::state::medium_high%]",
              "medium_low": "[%key:component::sensibo::entity::sensor::climate_react_low::state_attributes::fanlevel::state::medium_low%]",
              "quiet": "[%key:component::sensibo::entity::sensor::climate_react_low::state_attributes::fanlevel::state::quiet%]",
              "strong": "[%key:component::sensibo::entity::sensor::climate_react_low::state_attributes::fanlevel::state::strong%]"
            }
          },
          "horizontalswing": {
            "name": "[%key:component::sensibo::entity::sensor::climate_react_low::state_attributes::horizontalswing::name%]",
            "state": {
              "fixedcenter": "[%key:component::sensibo::entity::sensor::climate_react_low::state_attributes::horizontalswing::state::fixedcenter%]",
              "fixedcenterleft": "[%key:component::sensibo::entity::sensor::climate_react_low::state_attributes::horizontalswing::state::fixedcenterleft%]",
              "fixedcenterright": "[%key:component::sensibo::entity::sensor::climate_react_low::state_attributes::horizontalswing::state::fixedcenterright%]",
              "fixedleft": "[%key:component::sensibo::entity::sensor::climate_react_low::state_attributes::horizontalswing::state::fixedleft%]",
              "fixedleftright": "[%key:component::sensibo::entity::sensor::climate_react_low::state_attributes::horizontalswing::state::fixedleftright%]",
              "fixedright": "[%key:component::sensibo::entity::sensor::climate_react_low::state_attributes::horizontalswing::state::fixedright%]",
              "rangecenter": "[%key:component::sensibo::entity::sensor::climate_react_low::state_attributes::horizontalswing::state::rangecenter%]",
              "rangefull": "[%key:component::sensibo::entity::sensor::climate_react_low::state_attributes::horizontalswing::state::rangefull%]",
              "stopped": "[%key:common::state::off%]"
            }
          },
          "light": {
            "name": "[%key:component::light::title%]",
            "state": {
              "dim": "[%key:component::sensibo::entity::select::light::state::dim%]",
              "off": "[%key:common::state::off%]",
              "on": "[%key:common::state::on%]"
            }
          },
          "mode": {
            "name": "[%key:component::sensibo::entity::sensor::climate_react_low::state_attributes::mode::name%]",
            "state": {
              "auto": "[%key:common::state::auto%]",
              "cool": "[%key:component::climate::entity_component::_::state::cool%]",
              "dry": "[%key:component::climate::entity_component::_::state::dry%]",
              "fan_only": "[%key:component::climate::entity_component::_::state::fan_only%]",
              "heat": "[%key:component::climate::entity_component::_::state::heat%]",
              "heat_cool": "[%key:component::climate::entity_component::_::state::heat_cool%]",
              "off": "[%key:common::state::off%]"
            }
          },
          "on": {
            "name": "[%key:common::state::on%]",
            "state": {
              "false": "[%key:common::state::off%]",
              "true": "[%key:common::state::on%]"
            }
          },
          "swing": {
            "name": "[%key:component::climate::entity_component::_::state_attributes::swing_mode::name%]",
            "state": {
              "both": "[%key:component::climate::entity_component::_::state_attributes::swing_mode::state::both%]",
              "fixedbottom": "[%key:component::sensibo::entity::sensor::climate_react_low::state_attributes::swing::state::fixedbottom%]",
              "fixedmiddle": "[%key:component::sensibo::entity::sensor::climate_react_low::state_attributes::swing::state::fixedmiddle%]",
              "fixedmiddlebottom": "[%key:component::sensibo::entity::sensor::climate_react_low::state_attributes::swing::state::fixedmiddlebottom%]",
              "fixedmiddletop": "[%key:component::sensibo::entity::sensor::climate_react_low::state_attributes::swing::state::fixedmiddletop%]",
              "fixedtop": "[%key:component::sensibo::entity::sensor::climate_react_low::state_attributes::swing::state::fixedtop%]",
              "horizontal": "[%key:component::sensibo::entity::sensor::climate_react_low::state_attributes::swing::state::horizontal%]",
              "rangebottom": "[%key:component::sensibo::entity::sensor::climate_react_low::state_attributes::swing::state::rangebottom%]",
              "rangefull": "[%key:component::sensibo::entity::sensor::climate_react_low::state_attributes::swing::state::rangefull%]",
              "rangemiddle": "[%key:component::sensibo::entity::sensor::climate_react_low::state_attributes::swing::state::rangemiddle%]",
              "rangetop": "[%key:component::sensibo::entity::sensor::climate_react_low::state_attributes::swing::state::rangetop%]",
              "stopped": "[%key:common::state::off%]"
            }
          },
          "targettemperature": {
            "name": "[%key:component::climate::entity_component::_::state_attributes::temperature::name%]"
          },
          "temperatureunit": {
            "name": "[%key:component::sensibo::entity::sensor::climate_react_low::state_attributes::temperatureunit::name%]",
            "state": {
              "c": "[%key:component::sensibo::entity::sensor::climate_react_low::state_attributes::temperatureunit::state::c%]",
              "f": "[%key:component::sensibo::entity::sensor::climate_react_low::state_attributes::temperatureunit::state::f%]"
            }
          }
        }
      },
      "climate_react_low": {
        "name": "Climate React low temperature threshold",
        "state_attributes": {
          "fanlevel": {
            "name": "[%key:component::climate::entity_component::_::state_attributes::fan_mode::name%]",
            "state": {
              "auto": "[%key:common::state::auto%]",
              "high": "[%key:common::state::high%]",
              "low": "[%key:common::state::low%]",
              "medium": "[%key:common::state::medium%]",
              "medium_high": "Medium high",
              "medium_low": "Medium low",
              "quiet": "Quiet",
              "strong": "Strong"
            }
          },
          "horizontalswing": {
            "name": "Horizontal swing",
            "state": {
              "fixedcenter": "Fixed center",
              "fixedcenterleft": "Fixed center left",
              "fixedcenterright": "Fixed center right",
              "fixedleft": "Fixed left",
              "fixedleftright": "Fixed left right",
              "fixedright": "Fixed right",
              "rangecenter": "Range center",
              "rangefull": "Range full",
              "rangeleft": "Range left",
              "rangeright": "Range right",
              "stopped": "[%key:common::state::off%]"
            }
          },
          "light": {
            "name": "[%key:component::light::title%]",
            "state": {
              "dim": "[%key:component::sensibo::entity::select::light::state::dim%]",
              "off": "[%key:common::state::off%]",
              "on": "[%key:common::state::on%]"
            }
          },
          "mode": {
            "name": "Mode",
            "state": {
              "auto": "[%key:common::state::auto%]",
              "cool": "[%key:component::climate::entity_component::_::state::cool%]",
              "dry": "[%key:component::climate::entity_component::_::state::dry%]",
              "fan_only": "[%key:component::climate::entity_component::_::state::fan_only%]",
              "heat": "[%key:component::climate::entity_component::_::state::heat%]",
              "heat_cool": "[%key:component::climate::entity_component::_::state::heat_cool%]",
              "off": "[%key:common::state::off%]"
            }
          },
          "on": {
            "name": "[%key:common::state::on%]",
            "state": {
              "false": "[%key:common::state::off%]",
              "true": "[%key:common::state::on%]"
            }
          },
          "swing": {
            "name": "[%key:component::climate::entity_component::_::state_attributes::swing_mode::name%]",
            "state": {
              "both": "[%key:component::climate::entity_component::_::state_attributes::swing_mode::state::both%]",
              "fixedbottom": "Fixed bottom",
              "fixedmiddle": "Fixed middle",
              "fixedmiddlebottom": "Fixed middle bottom",
              "fixedmiddletop": "Fixed middle top",
              "fixedtop": "Fixed top",
              "horizontal": "Horizontal",
              "rangebottom": "Range bottom",
              "rangefull": "Range full",
              "rangemiddle": "Range middle",
              "rangetop": "Range top",
              "stopped": "[%key:common::state::off%]"
            }
          },
          "targettemperature": {
            "name": "[%key:component::climate::entity_component::_::state_attributes::temperature::name%]"
          },
          "temperatureunit": {
            "name": "Temperature unit",
            "state": {
              "c": "Celsius",
              "f": "Fahrenheit"
            }
          }
        }
      },
      "ethanol": {
        "name": "Ethanol"
      },
      "feels_like": {
        "name": "Temperature feels like"
      },
      "filter_last_reset": {
        "name": "Filter last reset"
      },
      "pm25_pure": {
        "name": "Pure AQI",
        "state": {
          "bad": "Bad",
          "good": "Good",
          "moderate": "Moderate"
        }
      },
      "rssi": {
        "name": "RSSI"
      },
      "sensitivity": {
        "name": "Pure sensitivity",
        "state": {
          "n": "[%key:common::state::normal%]",
          "s": "Sensitive"
        }
      },
      "smart_type": {
        "name": "Climate React type",
        "state": {
          "feelslike": "[%key:component::sensibo::entity::switch::climate_react_switch::state_attributes::type::state::feelslike%]",
          "humidity": "[%key:component::sensor::entity_component::humidity::name%]",
          "temperature": "[%key:component::sensor::entity_component::temperature::name%]"
        }
      },
      "timer_time": {
        "name": "Timer end time"
      },
      "tvoc": {
        "name": "TVOC"
      }
    },
    "switch": {
      "climate_react_switch": {
        "name": "Climate React",
        "state_attributes": {
          "type": {
            "name": "Type",
            "state": {
              "feelslike": "Feels like",
              "humidity": "[%key:component::sensor::entity_component::humidity::name%]",
              "temperature": "[%key:component::sensor::entity_component::temperature::name%]"
            }
          }
        }
      },
      "pure_boost_switch": {
        "name": "Pure Boost"
      },
      "timer_on_switch": {
        "name": "Timer",
        "state_attributes": {
          "id": { "name": "ID" },
          "turn_on": {
            "name": "Turns on",
            "state": {
              "false": "[%key:common::state::off%]",
              "true": "[%key:common::state::on%]"
            }
          }
        }
      }
    }
  },
  "exceptions": {
    "auth_error": {
      "message": "Authentication failed, please update your API key"
    },
    "climate_react_not_available": {
      "message": "Use the Sensibo 'Enable Climate React' action once to enable the switch, or use the Sensibo app"
    },
    "fan_mode_not_supported": {
      "message": "Climate fan mode {fan_mode} is not supported by the integration, please open an issue"
    },
    "horizontal_swing_not_supported": {
      "message": "Climate horizontal swing mode {horizontal_swing_mode} is not supported by the integration, please open an issue"
    },
    "mode_not_exist": {
      "message": "The entity does not support the chosen mode"
    },
    "no_data": {
      "message": "[%key:component::sensibo::config::error::no_devices%]"
    },
    "service_raised": {
      "message": "Could not perform action for {name} with error {error}"
    },
    "service_result_not_true": {
      "message": "Could not perform action for {name}"
    },
    "swing_not_supported": {
      "message": "Climate swing mode {swing_mode} is not supported by the integration, please open an issue"
    },
    "update_error": {
      "message": "There was an error updating from the Sensibo API with the error: {error}"
    }
  },
  "selector": {
    "assume_state": {
      "options": {
        "off": "[%key:common::state::off%]",
        "on": "[%key:common::state::on%]"
      }
    },
    "hvac_mode": {
      "options": {
        "auto": "[%key:common::state::auto%]",
        "cool": "[%key:component::climate::entity_component::_::state::cool%]",
        "dry": "[%key:component::climate::entity_component::_::state::dry%]",
        "fan": "[%key:component::climate::entity_component::_::state::fan_only%]",
        "heat": "[%key:component::climate::entity_component::_::state::heat%]",
        "off": "[%key:common::state::off%]"
      }
    },
    "light_mode": {
      "options": {
        "dim": "[%key:component::sensibo::entity::select::light::state::dim%]",
        "off": "[%key:common::state::off%]",
        "on": "[%key:common::state::on%]"
      }
    },
    "sensitivity": {
      "options": {
        "normal": "[%key:common::state::normal%]",
        "sensitive": "[%key:component::sensibo::entity::sensor::sensitivity::state::s%]"
      }
    },
    "smart_type": {
      "options": {
        "feelslike": "[%key:component::sensibo::entity::switch::climate_react_switch::state_attributes::type::state::feelslike%]",
        "humidity": "[%key:component::sensor::entity_component::humidity::name%]",
        "temperature": "[%key:component::sensor::entity_component::temperature::name%]"
      }
    }
  },
  "services": {
    "assume_state": {
      "description": "Sets Sensibo device to external state.",
      "fields": {
        "state": {
          "description": "State to set.",
          "name": "State"
        }
      },
      "name": "Assume state"
    },
    "enable_climate_react": {
      "description": "Enables and configures Climate React.",
      "fields": {
        "high_temperature_state": {
          "description": "What should happen at high threshold. Requires full state.",
          "name": "State high threshold"
        },
        "high_temperature_threshold": {
          "description": "When temp/humidity goes above.",
          "name": "Threshold high"
        },
        "low_temperature_state": {
          "description": "What should happen at low threshold. Requires full state.",
          "name": "State low threshold"
        },
        "low_temperature_threshold": {
          "description": "When temp/humidity goes below.",
          "name": "Threshold low"
        },
        "smart_type": {
          "description": "Choose between temperature/feels like/humidity.",
          "name": "Trigger type"
        }
      },
      "name": "Enable Climate React"
    },
    "enable_pure_boost": {
      "description": "Enables and configures Pure Boost settings.",
      "fields": {
        "ac_integration": {
          "description": "Integrate with air conditioner.",
          "name": "AC integration"
        },
        "geo_integration": {
          "description": "Integrate with presence.",
          "name": "Geo integration"
        },
        "indoor_integration": {
          "description": "Integrate with checking indoor air quality.",
          "name": "Indoor air quality"
        },
        "outdoor_integration": {
          "description": "Integrate with checking outdoor air quality.",
          "name": "Outdoor air quality"
        },
        "sensitivity": {
          "description": "Set the sensitivity for Pure Boost.",
          "name": "Sensitivity"
        }
      },
      "name": "Enable Pure Boost"
    },
    "enable_timer": {
      "description": "Enables the timer with custom time.",
      "fields": {
        "minutes": {
          "description": "Countdown for timer (for timer state on).",
          "name": "Minutes"
        }
      },
      "name": "Enable timer"
    },
    "full_state": {
      "description": "Sets full state for Sensibo device.",
      "fields": {
        "fan_mode": {
          "description": "Set fan mode.",
          "name": "Fan mode"
        },
        "horizontal_swing_mode": {
          "description": "Set horizontal swing mode.",
          "name": "Horizontal swing mode"
        },
        "light": {
          "description": "Set light on or off.",
          "name": "Light"
        },
        "mode": {
          "description": "HVAC mode to set.",
          "name": "HVAC mode"
        },
        "swing_mode": {
          "description": "Set swing mode.",
          "name": "Swing mode"
        },
        "target_temperature": {
          "description": "Set target temperature.",
          "name": "Target temperature"
        }
      },
      "name": "Set full state"
    },
    "get_device_capabilities": {
      "description": "Retrieves the device capabilities for a specific device according to API requirements.",
      "fields": {
        "hvac_mode": {
          "description": "[%key:component::climate::services::set_hvac_mode::fields::hvac_mode::description%]",
          "name": "[%key:component::climate::services::set_hvac_mode::fields::hvac_mode::name%]"
        }
      },
      "name": "Get device mode capabilities"
    }
  }
}

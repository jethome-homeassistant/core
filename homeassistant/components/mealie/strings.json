{
  "common": {
    "data_description_api_token": "The API token of your Mealie instance from your user profile within Mealie.",
    "data_description_host": "The URL of your Mealie instance, for example, {example_url}.",
    "data_description_verify_ssl": "Should SSL certificates be verified? This should be off for self-signed certificates."
  },
  "config": {
    "abort": {
      "already_configured": "[%key:common::config_flow::abort::already_configured_service%]",
      "already_in_progress": "[%key:common::config_flow::abort::already_in_progress%]",
      "reauth_successful": "[%key:common::config_flow::abort::reauth_successful%]",
      "reconfigure_successful": "[%key:common::config_flow::abort::reconfigure_successful%]",
      "wrong_account": "You have to use the same account that was used to configure the integration."
    },
    "error": {
      "cannot_connect": "[%key:common::config_flow::error::cannot_connect%]",
      "ingress_url": "Ingress URLs are only used for accessing the Mealie UI. Use your Home Assistant IP address and the network port within the configuration tab of the Mealie add-on.",
      "invalid_auth": "[%key:common::config_flow::error::invalid_auth%]",
      "mealie_version": "Minimum required version is v1.0.0. Please upgrade Mealie and then retry.",
      "unknown": "[%key:common::config_flow::error::unknown%]"
    },
    "step": {
      "hassio_confirm": {
        "data": {
          "api_token": "[%key:common::config_flow::data::api_token%]"
        },
        "data_description": {
          "api_token": "[%key:component::mealie::common::data_description_api_token%]"
        },
        "description": "Do you want to configure Home Assistant to connect to the Mealie instance provided by the add-on: {addon}?",
        "title": "Mealie via Home Assistant add-on"
      },
      "reauth_confirm": {
        "data": {
          "api_token": "[%key:common::config_flow::data::api_token%]"
        },
        "data_description": {
          "api_token": "[%key:component::mealie::common::data_description_api_token%]"
        },
        "description": "Please reauthenticate with Mealie."
      },
      "reconfigure": {
        "data": {
          "api_token": "[%key:common::config_flow::data::api_token%]",
          "host": "[%key:common::config_flow::data::url%]",
          "verify_ssl": "[%key:common::config_flow::data::verify_ssl%]"
        },
        "data_description": {
          "api_token": "[%key:component::mealie::common::data_description_api_token%]",
          "host": "[%key:component::mealie::common::data_description_host%]",
          "verify_ssl": "[%key:component::mealie::common::data_description_verify_ssl%]"
        },
        "description": "Please reconfigure with Mealie."
      },
      "user": {
        "data": {
          "api_token": "[%key:common::config_flow::data::api_token%]",
          "host": "[%key:common::config_flow::data::url%]",
          "verify_ssl": "[%key:common::config_flow::data::verify_ssl%]"
        },
        "data_description": {
          "api_token": "[%key:component::mealie::common::data_description_api_token%]",
          "host": "[%key:component::mealie::common::data_description_host%]",
          "verify_ssl": "[%key:component::mealie::common::data_description_verify_ssl%]"
        }
      }
    }
  },
  "entity": {
    "calendar": {
      "breakfast": {
        "name": "Breakfast"
      },
      "dinner": {
        "name": "Dinner"
      },
      "lunch": {
        "name": "Lunch"
      },
      "side": {
        "name": "Side"
      }
    },
    "sensor": {
      "categories": {
        "name": "Categories",
        "unit_of_measurement": "categories"
      },
      "recipes": {
        "name": "Recipes",
        "unit_of_measurement": "recipes"
      },
      "tags": {
        "name": "Tags",
        "unit_of_measurement": "tags"
      },
      "tools": {
        "name": "Tools",
        "unit_of_measurement": "tools"
      },
      "users": {
        "name": "Users",
        "unit_of_measurement": "users"
      }
    }
  },
  "exceptions": {
    "add_item_error": {
      "message": "An error occurred adding an item to {shopping_list_name}."
    },
    "auth_failed": {
      "message": "Authentication failed. Please reauthenticate."
    },
    "connection_error": {
      "message": "Error connecting to Mealie instance."
    },
    "could_not_import_recipe": {
      "message": "Mealie could not import the recipe from the URL."
    },
    "delete_item_error": {
      "message": "An error occurred deleting an item in {shopping_list_name}."
    },
    "end_date_before_start_date": {
      "message": "End date must be after start date."
    },
    "integration_not_found": {
      "message": "Integration \"{target}\" not found in registry."
    },
    "item_not_found_error": {
      "message": "Item {shopping_list_item} not found."
    },
    "no_recipes_found": {
      "message": "No recipes found matching your search."
    },
    "not_loaded": {
      "message": "{target} is not loaded."
    },
    "recipe_not_found": {
      "message": "Recipe with ID or slug `{recipe_id}` not found."
    },
    "setup_failed": {
      "message": "Could not connect to the Mealie instance."
    },
    "update_failed_mealplan": {
      "message": "Could not fetch mealplan data."
    },
    "update_failed_shopping_list": {
      "message": "Could not fetch shopping list data."
    },
    "update_failed_statistics": {
      "message": "Could not fetch statistics data."
    },
    "update_item_error": {
      "message": "An error occurred updating an item in {shopping_list_name}."
    },
    "version_error": {
      "message": "You are running {mealie_version} of Mealie. Minimum required version is {min_version}. Please upgrade Mealie and then retry."
    }
  },
  "selector": {
    "mealplan_entry_type": {
      "options": {
        "breakfast": "[%key:component::mealie::entity::calendar::breakfast::name%]",
        "dinner": "[%key:component::mealie::entity::calendar::dinner::name%]",
        "lunch": "[%key:component::mealie::entity::calendar::lunch::name%]",
        "side": "[%key:component::mealie::entity::calendar::side::name%]"
      }
    }
  },
  "services": {
    "get_mealplan": {
      "description": "Gets a mealplan from Mealie",
      "fields": {
        "config_entry_id": {
          "description": "The Mealie instance to use for this action.",
          "name": "Mealie instance"
        },
        "end_date": {
          "description": "The enddate of the data to get (default: today).",
          "name": "End date"
        },
        "start_date": {
          "description": "The startdate of the data to get (default: today).",
          "name": "Start date"
        }
      },
      "name": "Get mealplan"
    },
    "get_recipe": {
      "description": "Gets a recipe from Mealie",
      "fields": {
        "config_entry_id": {
          "description": "[%key:component::mealie::services::get_mealplan::fields::config_entry_id::description%]",
          "name": "[%key:component::mealie::services::get_mealplan::fields::config_entry_id::name%]"
        },
        "recipe_id": {
          "description": "The recipe ID or the slug of the recipe to get.",
          "name": "Recipe ID or slug"
        }
      },
      "name": "Get recipe"
    },
    "get_recipes": {
      "description": "Searches for recipes with any matching properties in Mealie",
      "fields": {
        "config_entry_id": {
          "description": "[%key:component::mealie::services::get_mealplan::fields::config_entry_id::description%]",
          "name": "[%key:component::mealie::services::get_mealplan::fields::config_entry_id::name%]"
        },
        "result_limit": {
          "description": "Maximum number of recipes to return (default: 10).",
          "name": "Result limit"
        },
        "search_terms": {
          "description": "Terms to search for in recipe properties.",
          "name": "Search terms"
        }
      },
      "name": "Get recipes"
    },
    "import_recipe": {
      "description": "Imports a recipe from an URL",
      "fields": {
        "config_entry_id": {
          "description": "[%key:component::mealie::services::get_mealplan::fields::config_entry_id::description%]",
          "name": "[%key:component::mealie::services::get_mealplan::fields::config_entry_id::name%]"
        },
        "include_tags": {
          "description": "Include tags from the website to the recipe.",
          "name": "Include tags"
        },
        "url": {
          "description": "The URL to the recipe to import.",
          "name": "URL to the recipe"
        }
      },
      "name": "Import recipe"
    },
    "set_mealplan": {
      "description": "Sets a mealplan for a specific date",
      "fields": {
        "config_entry_id": {
          "description": "[%key:component::mealie::services::get_mealplan::fields::config_entry_id::description%]",
          "name": "[%key:component::mealie::services::get_mealplan::fields::config_entry_id::name%]"
        },
        "date": {
          "description": "[%key:component::mealie::services::set_random_mealplan::fields::date::description%]",
          "name": "[%key:component::mealie::services::set_random_mealplan::fields::date::name%]"
        },
        "entry_type": {
          "description": "The type of dish to set the recipe to.",
          "name": "[%key:component::mealie::services::set_random_mealplan::fields::entry_type::name%]"
        },
        "note_text": {
          "description": "Meal note text for when planning without recipe.",
          "name": "Note text"
        },
        "note_title": {
          "description": "Meal note title for when planning without recipe.",
          "name": "Meal note title"
        },
        "recipe_id": {
          "description": "The recipe ID or the slug of the recipe to get.",
          "name": "Recipe ID"
        }
      },
      "name": "Set a mealplan"
    },
    "set_random_mealplan": {
      "description": "Sets a random mealplan for a specific date",
      "fields": {
        "config_entry_id": {
          "description": "[%key:component::mealie::services::get_mealplan::fields::config_entry_id::description%]",
          "name": "[%key:component::mealie::services::get_mealplan::fields::config_entry_id::name%]"
        },
        "date": {
          "description": "The date to set the mealplan for.",
          "name": "Date"
        },
        "entry_type": {
          "description": "The type of dish to randomize.",
          "name": "Entry type"
        }
      },
      "name": "Set random mealplan"
    }
  }
}

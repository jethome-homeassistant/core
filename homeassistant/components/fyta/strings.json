{
  "config": {
    "abort": {
      "already_configured": "[%key:common::config_flow::abort::already_configured_account%]",
      "already_in_progress": "[%key:common::config_flow::abort::already_in_progress%]",
      "reauth_successful": "[%key:common::config_flow::abort::reauth_successful%]"
    },
    "error": {
      "cannot_connect": "[%key:common::config_flow::error::cannot_connect%]",
      "invalid_auth": "[%key:common::config_flow::error::invalid_auth%]",
      "password_error": "Invalid password",
      "unknown": "[%key:common::config_flow::error::unknown%]"
    },
    "step": {
      "reauth_confirm": {
        "data": {
          "password": "[%key:common::config_flow::data::password%]",
          "username": "[%key:common::config_flow::data::username%]"
        },
        "data_description": {
          "password": "[%key:component::fyta::config::step::user::data_description::password%]",
          "username": "[%key:component::fyta::config::step::user::data_description::username%]"
        },
        "description": "Update your credentials for FYTA API"
      },
      "user": {
        "data": {
          "password": "[%key:common::config_flow::data::password%]",
          "username": "[%key:common::config_flow::data::email%]"
        },
        "data_description": {
          "password": "The password to log in to your FYTA account.",
          "username": "The email address to log in to your FYTA account."
        },
        "description": "Provide email and password to connect to the FYTA server",
        "title": "Credentials for FYTA API"
      }
    }
  },
  "entity": {
    "binary_sensor": {
      "notification_light": {
        "name": "Light notification"
      },
      "notification_nutrition": {
        "name": "Nutrition notification"
      },
      "notification_temperature": {
        "name": "Temperature notification"
      },
      "notification_water": {
        "name": "Water notification"
      },
      "productive_plant": {
        "name": "Productive plant"
      },
      "repotted": {
        "name": "Repotted"
      },
      "sensor_update_available": {
        "name": "Sensor update available"
      }
    },
    "image": {
      "plant_image": {
        "name": "Plant image"
      },
      "plant_image_user": {
        "name": "User image"
      }
    },
    "sensor": {
      "last_fertilised": {
        "name": "Last fertilized"
      },
      "light": {
        "name": "Light",
        "state_attributes": {
          "max_acceptable": { "name": "Maximum acceptable" },
          "max_good": { "name": "Maximum good" },
          "min_acceptable": { "name": "Minimum acceptable" },
          "min_good": { "name": "Minimum good" }
        }
      },
      "light_status": {
        "name": "Light state",
        "state": {
          "high": "[%key:common::state::high%]",
          "low": "[%key:common::state::low%]",
          "no_data": "[%key:component::fyta::entity::sensor::temperature_status::state::no_data%]",
          "perfect": "[%key:component::fyta::entity::sensor::temperature_status::state::perfect%]",
          "too_high": "[%key:component::fyta::entity::sensor::temperature_status::state::too_high%]",
          "too_low": "[%key:component::fyta::entity::sensor::temperature_status::state::too_low%]"
        }
      },
      "moisture": {
        "name": "[%key:component::sensor::entity_component::moisture::name%]",
        "state_attributes": {
          "max_acceptable": {
            "name": "[%key:component::fyta::entity::sensor::light::state_attributes::max_acceptable::name%]"
          },
          "max_good": {
            "name": "[%key:component::fyta::entity::sensor::light::state_attributes::max_good::name%]"
          },
          "min_acceptable": {
            "name": "[%key:component::fyta::entity::sensor::light::state_attributes::min_acceptable::name%]"
          },
          "min_good": {
            "name": "[%key:component::fyta::entity::sensor::light::state_attributes::min_good::name%]"
          }
        }
      },
      "moisture_status": {
        "name": "Moisture state",
        "state": {
          "high": "[%key:common::state::high%]",
          "low": "[%key:common::state::low%]",
          "no_data": "[%key:component::fyta::entity::sensor::temperature_status::state::no_data%]",
          "perfect": "[%key:component::fyta::entity::sensor::temperature_status::state::perfect%]",
          "too_high": "[%key:component::fyta::entity::sensor::temperature_status::state::too_high%]",
          "too_low": "[%key:component::fyta::entity::sensor::temperature_status::state::too_low%]"
        }
      },
      "next_fertilisation": {
        "name": "Next fertilization"
      },
      "nutrients_status": {
        "name": "Nutrients state",
        "state": {
          "high": "[%key:common::state::high%]",
          "low": "[%key:common::state::low%]",
          "no_data": "[%key:component::fyta::entity::sensor::temperature_status::state::no_data%]",
          "perfect": "[%key:component::fyta::entity::sensor::temperature_status::state::perfect%]",
          "too_high": "[%key:component::fyta::entity::sensor::temperature_status::state::too_high%]",
          "too_low": "[%key:component::fyta::entity::sensor::temperature_status::state::too_low%]"
        }
      },
      "plant_status": {
        "name": "Plant state",
        "state": {
          "deleted": "Deleted",
          "doing_great": "Doing great",
          "need_attention": "Needs attention",
          "no_sensor": "No sensor"
        }
      },
      "salinity": {
        "name": "Salinity",
        "state_attributes": {
          "max_acceptable": {
            "name": "[%key:component::fyta::entity::sensor::light::state_attributes::max_acceptable::name%]"
          },
          "max_good": {
            "name": "[%key:component::fyta::entity::sensor::light::state_attributes::max_good::name%]"
          },
          "min_acceptable": {
            "name": "[%key:component::fyta::entity::sensor::light::state_attributes::min_acceptable::name%]"
          },
          "min_good": {
            "name": "[%key:component::fyta::entity::sensor::light::state_attributes::min_good::name%]"
          }
        }
      },
      "salinity_status": {
        "name": "Salinity state",
        "state": {
          "high": "[%key:common::state::high%]",
          "low": "[%key:common::state::low%]",
          "no_data": "[%key:component::fyta::entity::sensor::temperature_status::state::no_data%]",
          "perfect": "[%key:component::fyta::entity::sensor::temperature_status::state::perfect%]",
          "too_high": "[%key:component::fyta::entity::sensor::temperature_status::state::too_high%]",
          "too_low": "[%key:component::fyta::entity::sensor::temperature_status::state::too_low%]"
        }
      },
      "scientific_name": {
        "name": "Scientific name"
      },
      "temperature": {
        "name": "[%key:component::sensor::entity_component::temperature::name%]",
        "state_attributes": {
          "max_acceptable": {
            "name": "[%key:component::fyta::entity::sensor::light::state_attributes::max_acceptable::name%]"
          },
          "max_good": {
            "name": "[%key:component::fyta::entity::sensor::light::state_attributes::max_good::name%]"
          },
          "min_acceptable": {
            "name": "[%key:component::fyta::entity::sensor::light::state_attributes::min_acceptable::name%]"
          },
          "min_good": {
            "name": "[%key:component::fyta::entity::sensor::light::state_attributes::min_good::name%]"
          }
        }
      },
      "temperature_status": {
        "name": "Temperature state",
        "state": {
          "high": "[%key:common::state::high%]",
          "low": "[%key:common::state::low%]",
          "no_data": "No data",
          "perfect": "Perfect",
          "too_high": "Too high",
          "too_low": "Too low"
        }
      }
    }
  },
  "exceptions": {
    "auth_failed": {
      "message": "Error while logging in to the API."
    },
    "config_entry_not_ready": {
      "message": "Error while loading the config entry."
    },
    "update_error": {
      "message": "Error while updating data from the API."
    }
  }
}

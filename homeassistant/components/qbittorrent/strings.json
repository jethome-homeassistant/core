{
  "config": {
    "abort": {
      "already_configured": "[%key:common::config_flow::abort::already_configured_device%]"
    },
    "error": {
      "cannot_connect": "[%key:common::config_flow::error::cannot_connect%]",
      "invalid_auth": "[%key:common::config_flow::error::invalid_auth%]"
    },
    "step": {
      "user": {
        "data": {
          "password": "[%key:common::config_flow::data::password%]",
          "url": "[%key:common::config_flow::data::url%]",
          "username": "[%key:common::config_flow::data::username%]",
          "verify_ssl": "[%key:common::config_flow::data::verify_ssl%]"
        }
      }
    }
  },
  "entity": {
    "sensor": {
      "active_torrents": {
        "name": "Active torrents",
        "unit_of_measurement": "torrents"
      },
      "all_torrents": {
        "name": "All torrents",
        "unit_of_measurement": "[%key:component::qbittorrent::entity::sensor::active_torrents::unit_of_measurement%]"
      },
      "alltime_download": {
        "name": "All-time download"
      },
      "alltime_upload": {
        "name": "All-time upload"
      },
      "connection_status": {
        "name": "Connection status",
        "state": {
          "connected": "[%key:common::state::connected%]",
          "disconnected": "[%key:common::state::disconnected%]",
          "firewalled": "Firewalled"
        }
      },
      "current_status": {
        "name": "Status",
        "state": {
          "downloading": "Downloading",
          "idle": "[%key:common::state::idle%]",
          "seeding": "Seeding",
          "up_down": "Up/Down"
        }
      },
      "download_speed": {
        "name": "Download speed"
      },
      "download_speed_limit": {
        "name": "Download speed limit"
      },
      "errored_torrents": {
        "name": "Errored torrents",
        "unit_of_measurement": "[%key:component::qbittorrent::entity::sensor::active_torrents::unit_of_measurement%]"
      },
      "global_ratio": {
        "name": "Global ratio"
      },
      "inactive_torrents": {
        "name": "Inactive torrents",
        "unit_of_measurement": "[%key:component::qbittorrent::entity::sensor::active_torrents::unit_of_measurement%]"
      },
      "paused_torrents": {
        "name": "Paused torrents",
        "unit_of_measurement": "[%key:component::qbittorrent::entity::sensor::active_torrents::unit_of_measurement%]"
      },
      "upload_speed": {
        "name": "Upload speed"
      },
      "upload_speed_limit": {
        "name": "Upload speed limit"
      }
    },
    "switch": {
      "alternative_speed": {
        "name": "Alternative speed"
      }
    }
  },
  "exceptions": {
    "cannot_connect": {
      "message": "Can't connect to qBittorrent, please check your configuration."
    },
    "invalid_device": {
      "message": "No device with ID {device_id} was found"
    },
    "invalid_entry_id": {
      "message": "No entry with ID {device_id} was found"
    },
    "login_error": {
      "message": "A login error occurred. Please check your username and password."
    }
  },
  "services": {
    "get_all_torrents": {
      "description": "Gets a list of current torrents from all instances of qBittorrent",
      "fields": {
        "torrent_filter": {
          "description": "What kind of torrents you want to return, such as All or Active.",
          "name": "Torrent filter"
        }
      },
      "name": "Get all torrents"
    },
    "get_torrents": {
      "description": "Gets a list of current torrents",
      "fields": {
        "device_id": {
          "description": "Which service to grab the list from",
          "name": "[%key:common::config_flow::data::device%]"
        },
        "torrent_filter": {
          "description": "What kind of torrents you want to return, such as All or Active.",
          "name": "Torrent filter"
        }
      },
      "name": "Get torrents"
    }
  }
}

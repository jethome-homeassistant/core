{
  "config": {
    "abort": {
      "already_configured": "PCHK connection using the same IP address/port is already configured.",
      "reconfigure_successful": "[%key:common::config_flow::abort::reconfigure_successful%]"
    },
    "error": {
      "authentication_error": "Authentication failed. Wrong username or password.",
      "connection_refused": "Unable to connect to PCHK. Check IP and port.",
      "license_error": "Maximum number of connections was reached. An additional licence key is required."
    },
    "step": {
      "reconfigure": {
        "data": {
          "acknowledge": "[%key:component::lcn::config::step::user::data::acknowledge%]",
          "dim_mode": "[%key:component::lcn::config::step::user::data::dim_mode%]",
          "ip_address": "[%key:common::config_flow::data::ip%]",
          "password": "[%key:common::config_flow::data::password%]",
          "port": "[%key:common::config_flow::data::port%]",
          "sk_num_tries": "[%key:component::lcn::config::step::user::data::sk_num_tries%]",
          "username": "[%key:common::config_flow::data::username%]"
        },
        "data_description": {
          "acknowledge": "[%key:component::lcn::config::step::user::data_description::acknowledge%]",
          "dim_mode": "[%key:component::lcn::config::step::user::data_description::dim_mode%]",
          "ip_address": "[%key:component::lcn::config::step::user::data_description::ip_address%]",
          "password": "[%key:component::lcn::config::step::user::data_description::password%]",
          "port": "[%key:component::lcn::config::step::user::data_description::port%]",
          "sk_num_tries": "[%key:component::lcn::config::step::user::data_description::sk_num_tries%]",
          "username": "[%key:component::lcn::config::step::user::data_description::username%]"
        },
        "description": "Reconfigure connection to LCN host.",
        "title": "Reconfigure LCN host"
      },
      "user": {
        "data": {
          "acknowledge": "Request acknowledgement from modules",
          "dim_mode": "Dimming mode",
          "host": "[%key:common::config_flow::data::name%]",
          "ip_address": "[%key:common::config_flow::data::ip%]",
          "password": "[%key:common::config_flow::data::password%]",
          "port": "[%key:common::config_flow::data::port%]",
          "sk_num_tries": "Segment coupler scan attempts",
          "username": "[%key:common::config_flow::data::username%]"
        },
        "data_description": {
          "acknowledge": "Retry sendig commands if no expected response is received from modules (increases bus traffic).",
          "dim_mode": "The number of steps used for dimming outputs of all LCN modules.",
          "host": "Name of the LCN integration entry.",
          "ip_address": "IP address or hostname of the PCHK server.",
          "password": "Password for authorization on the PCHK server.",
          "port": "Port used by the PCHK server.",
          "sk_num_tries": "If you have a segment coupler in your LCN installation, increase this number to at least 3, so all segment couplers are identified correctly.",
          "username": "Username for authorization on the PCHK server."
        },
        "description": "Set up new connection to LCN host.",
        "title": "Set up LCN host"
      }
    }
  },
  "device_automation": {
    "extra_fields": {
      "action": "Action",
      "code": "Code",
      "key": "Key",
      "level": "Level"
    },
    "trigger_type": {
      "codelock": "Code lock code received",
      "fingerprint": "Fingerprint code received",
      "send_keys": "Send keys received",
      "transmitter": "Transmitter code received",
      "transponder": "Transponder code received"
    }
  },
  "exceptions": {
    "cannot_connect": {
      "message": "Unable to connect to {config_entry_title}."
    },
    "invalid_device_id": {
      "message": "LCN device for given device ID {device_id} has not been configured."
    },
    "invalid_domain": {
      "message": "Invalid domain {domain}."
    },
    "invalid_length_of_states_string": {
      "message": "Invalid length of states string. Expected 8 characters."
    },
    "invalid_lock_keys_table": {
      "message": "Invalid table for locking keys. Only table A allowed when locking for a specific time."
    },
    "invalid_send_keys_action": {
      "message": "Invalid state for sending keys. Only 'hit' allowed for deferred sending."
    }
  },
  "issues": {
    "deprecated_keylock_sensor": {
      "description": "Your LCN key lock binary sensor entity `{entity}` is being used in automations or scripts. A key lock switch entity is available and should be used going forward.\n\nPlease adjust your automations or scripts to fix this issue.",
      "title": "Deprecated LCN key lock binary sensor"
    },
    "deprecated_regulatorlock_sensor": {
      "description": "Your LCN regulator lock binary sensor entity `{entity}` is being used in automations or scripts. A regulator lock switch entity is available and should be used going forward.\n\nPlease adjust your automations or scripts to fix this issue.",
      "title": "Deprecated LCN regulator lock binary sensor"
    }
  },
  "services": {
    "address_to_device_id": {
      "description": "Converts an LCN address into a device ID.",
      "fields": {
        "host": {
          "description": "Host name as given in the integration panel.",
          "name": "Host name"
        },
        "id": {
          "description": "Module or group number of the target.",
          "name": "Module or group ID"
        },
        "segment_id": {
          "description": "Segment number of the target.",
          "name": "Segment ID"
        },
        "type": {
          "description": "Module type of the target.",
          "name": "Type"
        }
      },
      "name": "Address to device ID"
    },
    "dyn_text": {
      "description": "Sends dynamic text to LCN-GTxD displays.",
      "fields": {
        "device_id": {
          "description": "[%key:component::lcn::services::output_abs::fields::device_id::description%]",
          "name": "[%key:common::config_flow::data::device%]"
        },
        "row": {
          "description": "Text row.",
          "name": "Row"
        },
        "text": {
          "description": "Text to send (up to 60 characters encoded as UTF-8).",
          "name": "Text"
        }
      },
      "name": "Dynamic text"
    },
    "led": {
      "description": "Sets the LED state.",
      "fields": {
        "device_id": {
          "description": "[%key:component::lcn::services::output_abs::fields::device_id::description%]",
          "name": "[%key:common::config_flow::data::device%]"
        },
        "led": {
          "description": "The LED port of the device.",
          "name": "[%key:component::lcn::services::led::name%]"
        },
        "state": {
          "description": "The LED state to set.",
          "name": "State"
        }
      },
      "name": "LED"
    },
    "lock_keys": {
      "description": "Sets the key lock states.",
      "fields": {
        "device_id": {
          "description": "[%key:component::lcn::services::output_abs::fields::device_id::description%]",
          "name": "[%key:common::config_flow::data::device%]"
        },
        "state": {
          "description": "Key lock states as string (1=on, 2=off, T=toggle, -=nochange).",
          "name": "State"
        },
        "table": {
          "description": "Table with keys to lock (must be A for interval).",
          "name": "Table"
        },
        "time": {
          "description": "Lock interval.",
          "name": "Time"
        },
        "time_unit": {
          "description": "Time unit of lock interval.",
          "name": "[%key:component::lcn::services::send_keys::fields::time_unit::name%]"
        }
      },
      "name": "Lock keys"
    },
    "lock_regulator": {
      "description": "Locks a regulator setpoint.",
      "fields": {
        "device_id": {
          "description": "[%key:component::lcn::services::output_abs::fields::device_id::description%]",
          "name": "[%key:common::config_flow::data::device%]"
        },
        "setpoint": {
          "description": "Setpoint name.",
          "name": "Setpoint"
        },
        "state": {
          "description": "New setpoint state.",
          "name": "State"
        }
      },
      "name": "Lock regulator"
    },
    "output_abs": {
      "description": "Sets absolute brightness of output port in percent.",
      "fields": {
        "brightness": {
          "description": "Absolute brightness.",
          "name": "Brightness"
        },
        "device_id": {
          "description": "The device ID of the LCN module or group.",
          "name": "[%key:common::config_flow::data::device%]"
        },
        "output": {
          "description": "Output port.",
          "name": "Output"
        },
        "transition": {
          "description": "Transition time.",
          "name": "Transition"
        }
      },
      "name": "Output absolute brightness"
    },
    "output_rel": {
      "description": "Sets relative brightness of output port in percent.",
      "fields": {
        "brightness": {
          "description": "Relative brightness.",
          "name": "Brightness"
        },
        "device_id": {
          "description": "[%key:component::lcn::services::output_abs::fields::device_id::description%]",
          "name": "[%key:common::config_flow::data::device%]"
        },
        "output": {
          "description": "[%key:component::lcn::services::output_abs::fields::output::description%]",
          "name": "[%key:component::lcn::services::output_abs::fields::output::name%]"
        }
      },
      "name": "Output relative brightness"
    },
    "output_toggle": {
      "description": "Toggles output port.",
      "fields": {
        "device_id": {
          "description": "[%key:component::lcn::services::output_abs::fields::device_id::description%]",
          "name": "[%key:common::config_flow::data::device%]"
        },
        "output": {
          "description": "[%key:component::lcn::services::output_abs::fields::output::description%]",
          "name": "[%key:component::lcn::services::output_abs::fields::output::name%]"
        },
        "transition": {
          "description": "[%key:component::lcn::services::output_abs::fields::transition::description%]",
          "name": "Transition"
        }
      },
      "name": "Toggle output"
    },
    "pck": {
      "description": "Sends arbitrary PCK command.",
      "fields": {
        "device_id": {
          "description": "[%key:component::lcn::services::output_abs::fields::device_id::description%]",
          "name": "[%key:common::config_flow::data::device%]"
        },
        "pck": {
          "description": "PCK command (without address header).",
          "name": "[%key:component::lcn::services::pck::name%]"
        }
      },
      "name": "PCK"
    },
    "relays": {
      "description": "Sets the relay states.",
      "fields": {
        "device_id": {
          "description": "[%key:component::lcn::services::output_abs::fields::device_id::description%]",
          "name": "[%key:common::config_flow::data::device%]"
        },
        "state": {
          "description": "Relay states as string (1=on, 2=off, t=toggle, -=no change).",
          "name": "State"
        }
      },
      "name": "Relays"
    },
    "send_keys": {
      "description": "Sends keys (which executes bound commands).",
      "fields": {
        "device_id": {
          "description": "[%key:component::lcn::services::output_abs::fields::device_id::description%]",
          "name": "[%key:common::config_flow::data::device%]"
        },
        "keys": {
          "description": "Keys to send.",
          "name": "Keys"
        },
        "state": {
          "description": "Key state upon sending (must be hit for deferred).",
          "name": "State"
        },
        "time": {
          "description": "Send delay.",
          "name": "Time"
        },
        "time_unit": {
          "description": "Time unit of send delay.",
          "name": "Time unit"
        }
      },
      "name": "Send keys"
    },
    "var_abs": {
      "description": "Sets absolute value of a variable or setpoint.",
      "fields": {
        "device_id": {
          "description": "[%key:component::lcn::services::output_abs::fields::device_id::description%]",
          "name": "[%key:common::config_flow::data::device%]"
        },
        "unit_of_measurement": {
          "description": "Unit of value.",
          "name": "Unit of measurement"
        },
        "value": {
          "description": "Value to set.",
          "name": "Value"
        },
        "variable": {
          "description": "Variable or setpoint name.",
          "name": "Variable"
        }
      },
      "name": "Set absolute variable"
    },
    "var_rel": {
      "description": "Shift value of a variable, setpoint or threshold.",
      "fields": {
        "device_id": {
          "description": "[%key:component::lcn::services::output_abs::fields::device_id::description%]",
          "name": "[%key:common::config_flow::data::device%]"
        },
        "unit_of_measurement": {
          "description": "[%key:component::lcn::services::var_abs::fields::unit_of_measurement::description%]",
          "name": "Unit of measurement"
        },
        "value": {
          "description": "Shift value.",
          "name": "Value"
        },
        "value_reference": {
          "description": "Reference value for setpoint and threshold.",
          "name": "Reference value"
        },
        "variable": {
          "description": "[%key:component::lcn::services::var_abs::fields::variable::description%]",
          "name": "[%key:component::lcn::services::var_abs::fields::variable::name%]"
        }
      },
      "name": "Shift variable"
    },
    "var_reset": {
      "description": "Resets value of variable or setpoint.",
      "fields": {
        "device_id": {
          "description": "[%key:component::lcn::services::output_abs::fields::device_id::description%]",
          "name": "[%key:common::config_flow::data::device%]"
        },
        "variable": {
          "description": "[%key:component::lcn::services::var_abs::fields::variable::description%]",
          "name": "[%key:component::lcn::services::var_abs::fields::variable::name%]"
        }
      },
      "name": "Reset variable"
    }
  }
}

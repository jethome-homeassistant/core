{
  "common": {
    "data_description_api_key": "The tankerkoenig API key to be used.",
    "data_description_location": "Pick the location where to search for gas stations.",
    "data_description_name": "The name of the particular region to be added.",
    "data_description_radius": "The radius in kilometers to search for gas stations around the selected location.",
    "data_description_stations": "Select the stations you want to add to Home Assistant."
  },
  "config": {
    "abort": {
      "already_configured": "[%key:common::config_flow::abort::already_configured_location%]",
      "reauth_successful": "[%key:common::config_flow::abort::reauth_successful%]"
    },
    "error": {
      "invalid_auth": "[%key:common::config_flow::error::invalid_auth%]",
      "no_stations": "Could not find any station in range."
    },
    "step": {
      "reauth_confirm": {
        "data": {
          "api_key": "[%key:common::config_flow::data::api_key%]"
        },
        "data_description": {
          "api_key": "[%key:component::tankerkoenig::common::data_description_api_key%]"
        }
      },
      "select_station": {
        "data": {
          "stations": "Stations"
        },
        "data_description": {
          "stations": "[%key:component::tankerkoenig::common::data_description_stations%]"
        },
        "description": "Found {stations_count} stations in radius",
        "title": "Select stations to add"
      },
      "user": {
        "data": {
          "api_key": "[%key:common::config_flow::data::api_key%]",
          "location": "[%key:common::config_flow::data::location%]",
          "name": "Region name",
          "radius": "Search radius"
        },
        "data_description": {
          "api_key": "[%key:component::tankerkoenig::common::data_description_api_key%]",
          "location": "[%key:component::tankerkoenig::common::data_description_location%]",
          "name": "[%key:component::tankerkoenig::common::data_description_name%]",
          "radius": "[%key:component::tankerkoenig::common::data_description_radius%]"
        }
      }
    }
  },
  "entity": {
    "binary_sensor": {
      "status": {
        "name": "Status",
        "state_attributes": {
          "latitude": {
            "name": "[%key:common::config_flow::data::latitude%]"
          },
          "longitude": {
            "name": "[%key:common::config_flow::data::longitude%]"
          }
        }
      }
    },
    "sensor": {
      "diesel": {
        "name": "Diesel",
        "state_attributes": {
          "brand": {
            "name": "[%key:component::tankerkoenig::entity::sensor::e5::state_attributes::brand::name%]"
          },
          "city": {
            "name": "[%key:component::tankerkoenig::entity::sensor::e5::state_attributes::city::name%]"
          },
          "fuel_type": {
            "name": "[%key:component::tankerkoenig::entity::sensor::e5::state_attributes::fuel_type::name%]"
          },
          "house_number": {
            "name": "[%key:component::tankerkoenig::entity::sensor::e5::state_attributes::house_number::name%]"
          },
          "latitude": {
            "name": "[%key:common::config_flow::data::latitude%]"
          },
          "longitude": {
            "name": "[%key:common::config_flow::data::longitude%]"
          },
          "postcode": {
            "name": "[%key:component::tankerkoenig::entity::sensor::e5::state_attributes::postcode::name%]"
          },
          "station_name": {
            "name": "[%key:component::tankerkoenig::entity::sensor::e5::state_attributes::station_name::name%]"
          },
          "street": {
            "name": "[%key:component::tankerkoenig::entity::sensor::e5::state_attributes::street::name%]"
          }
        }
      },
      "e10": {
        "name": "Super E10",
        "state_attributes": {
          "brand": {
            "name": "[%key:component::tankerkoenig::entity::sensor::e5::state_attributes::brand::name%]"
          },
          "city": {
            "name": "[%key:component::tankerkoenig::entity::sensor::e5::state_attributes::city::name%]"
          },
          "fuel_type": {
            "name": "[%key:component::tankerkoenig::entity::sensor::e5::state_attributes::fuel_type::name%]"
          },
          "house_number": {
            "name": "[%key:component::tankerkoenig::entity::sensor::e5::state_attributes::house_number::name%]"
          },
          "latitude": {
            "name": "[%key:common::config_flow::data::latitude%]"
          },
          "longitude": {
            "name": "[%key:common::config_flow::data::longitude%]"
          },
          "postcode": {
            "name": "[%key:component::tankerkoenig::entity::sensor::e5::state_attributes::postcode::name%]"
          },
          "station_name": {
            "name": "[%key:component::tankerkoenig::entity::sensor::e5::state_attributes::station_name::name%]"
          },
          "street": {
            "name": "[%key:component::tankerkoenig::entity::sensor::e5::state_attributes::street::name%]"
          }
        }
      },
      "e5": {
        "name": "Super",
        "state_attributes": {
          "brand": {
            "name": "Brand"
          },
          "city": {
            "name": "City"
          },
          "fuel_type": {
            "name": "Fuel type"
          },
          "house_number": {
            "name": "House number"
          },
          "latitude": {
            "name": "[%key:common::config_flow::data::latitude%]"
          },
          "longitude": {
            "name": "[%key:common::config_flow::data::longitude%]"
          },
          "postcode": {
            "name": "Postal code"
          },
          "station_name": {
            "name": "Station name"
          },
          "street": {
            "name": "Street"
          }
        }
      }
    }
  },
  "exceptions": {
    "invalid_api_key": {
      "message": "The provided API key is invalid. Please check your API key."
    },
    "rate_limit_reached": {
      "message": "You have reached the rate limit for the Tankerkoenig API. Please try to increase the poll interval and reduce the requests."
    },
    "station_update_failed": {
      "message": "Failed to update station data for station(s) {station_ids}. Please check your network connection."
    }
  },
  "options": {
    "error": {
      "invalid_auth": "[%key:common::config_flow::error::invalid_auth%]"
    },
    "step": {
      "init": {
        "data": {
          "show_on_map": "Show stations on map",
          "stations": "[%key:component::tankerkoenig::config::step::select_station::data::stations%]"
        },
        "data_description": {
          "show_on_map": "Whether to show the station sensors on the map or not.",
          "stations": "[%key:component::tankerkoenig::common::data_description_stations%]"
        },
        "title": "Tankerkoenig options"
      }
    }
  }
}

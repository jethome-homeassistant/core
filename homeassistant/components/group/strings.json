{
  "config": {
    "step": {
      "binary_sensor": {
        "data": {
          "all": "All entities",
          "entities": "Members",
          "hide_members": "Hide members",
          "name": "[%key:common::config_flow::data::name%]"
        },
        "data_description": {
          "all": "If enabled, the group's state is on only if all members are on. If disabled, the group's state is on if any member is on."
        },
        "title": "[%key:component::group::config::step::user::title%]"
      },
      "button": {
        "data": {
          "entities": "[%key:component::group::config::step::binary_sensor::data::entities%]",
          "hide_members": "[%key:component::group::config::step::binary_sensor::data::hide_members%]",
          "name": "[%key:common::config_flow::data::name%]"
        },
        "title": "[%key:component::group::config::step::user::title%]"
      },
      "cover": {
        "data": {
          "entities": "[%key:component::group::config::step::binary_sensor::data::entities%]",
          "hide_members": "[%key:component::group::config::step::binary_sensor::data::hide_members%]",
          "name": "[%key:common::config_flow::data::name%]"
        },
        "title": "[%key:component::group::config::step::user::title%]"
      },
      "event": {
        "data": {
          "entities": "[%key:component::group::config::step::binary_sensor::data::entities%]",
          "hide_members": "[%key:component::group::config::step::binary_sensor::data::hide_members%]",
          "name": "[%key:common::config_flow::data::name%]"
        },
        "title": "[%key:component::group::config::step::user::title%]"
      },
      "fan": {
        "data": {
          "entities": "[%key:component::group::config::step::binary_sensor::data::entities%]",
          "hide_members": "[%key:component::group::config::step::binary_sensor::data::hide_members%]",
          "name": "[%key:common::config_flow::data::name%]"
        },
        "title": "[%key:component::group::config::step::user::title%]"
      },
      "light": {
        "data": {
          "all": "[%key:component::group::config::step::binary_sensor::data::all%]",
          "entities": "[%key:component::group::config::step::binary_sensor::data::entities%]",
          "hide_members": "[%key:component::group::config::step::binary_sensor::data::hide_members%]",
          "name": "[%key:common::config_flow::data::name%]"
        },
        "data_description": {
          "all": "[%key:component::group::config::step::binary_sensor::data_description::all%]"
        },
        "title": "[%key:component::group::config::step::user::title%]"
      },
      "lock": {
        "data": {
          "entities": "[%key:component::group::config::step::binary_sensor::data::entities%]",
          "hide_members": "[%key:component::group::config::step::binary_sensor::data::hide_members%]",
          "name": "[%key:common::config_flow::data::name%]"
        },
        "title": "[%key:component::group::config::step::user::title%]"
      },
      "media_player": {
        "data": {
          "entities": "[%key:component::group::config::step::binary_sensor::data::entities%]",
          "hide_members": "[%key:component::group::config::step::binary_sensor::data::hide_members%]",
          "name": "[%key:common::config_flow::data::name%]"
        },
        "title": "[%key:component::group::config::step::user::title%]"
      },
      "notify": {
        "data": {
          "entities": "[%key:component::group::config::step::binary_sensor::data::entities%]",
          "hide_members": "[%key:component::group::config::step::binary_sensor::data::hide_members%]",
          "name": "[%key:common::config_flow::data::name%]"
        },
        "title": "[%key:component::group::config::step::user::title%]"
      },
      "sensor": {
        "data": {
          "device_class": "Device class",
          "entities": "[%key:component::group::config::step::binary_sensor::data::entities%]",
          "hide_members": "[%key:component::group::config::step::binary_sensor::data::hide_members%]",
          "ignore_non_numeric": "Ignore non-numeric",
          "name": "[%key:common::config_flow::data::name%]",
          "round_digits": "Round value to number of decimals",
          "state_class": "State class",
          "type": "Type",
          "unit_of_measurement": "Unit of measurement"
        },
        "data_description": {
          "ignore_non_numeric": "If enabled, the group's state is calculated if at least one member has a numerical value. If disabled, the group's state is calculated only if all group members have numerical values."
        },
        "title": "[%key:component::group::config::step::user::title%]"
      },
      "switch": {
        "data": {
          "all": "[%key:component::group::config::step::binary_sensor::data::all%]",
          "entities": "[%key:component::group::config::step::binary_sensor::data::entities%]",
          "hide_members": "[%key:component::group::config::step::binary_sensor::data::hide_members%]",
          "name": "[%key:common::config_flow::data::name%]"
        },
        "data_description": {
          "all": "[%key:component::group::config::step::binary_sensor::data_description::all%]"
        },
        "title": "[%key:component::group::config::step::user::title%]"
      },
      "user": {
        "description": "Groups allow you to create a new entity that represents multiple entities of the same type.",
        "menu_options": {
          "binary_sensor": "Binary sensor group",
          "button": "Button group",
          "cover": "Cover group",
          "event": "Event group",
          "fan": "Fan group",
          "light": "Light group",
          "lock": "Lock group",
          "media_player": "Media player group",
          "notify": "Notify group",
          "sensor": "Sensor group",
          "switch": "Switch group",
          "valve": "Valve group"
        },
        "title": "Create group"
      },
      "valve": {
        "data": {
          "all": "[%key:component::group::config::step::binary_sensor::data::all%]",
          "entities": "[%key:component::group::config::step::binary_sensor::data::entities%]",
          "hide_members": "[%key:component::group::config::step::binary_sensor::data::hide_members%]",
          "name": "[%key:common::config_flow::data::name%]"
        },
        "data_description": {
          "all": "[%key:component::group::config::step::binary_sensor::data_description::all%]"
        },
        "title": "[%key:component::group::config::step::user::title%]"
      }
    }
  },
  "entity_component": {
    "_": {
      "name": "[%key:component::group::title%]",
      "state": {
        "closed": "[%key:common::state::closed%]",
        "home": "[%key:common::state::home%]",
        "locked": "[%key:common::state::locked%]",
        "not_home": "[%key:common::state::not_home%]",
        "off": "[%key:common::state::off%]",
        "ok": "[%key:component::binary_sensor::entity_component::problem::state::off%]",
        "on": "[%key:common::state::on%]",
        "open": "[%key:common::state::open%]",
        "problem": "[%key:component::binary_sensor::entity_component::problem::state::on%]",
        "unlocked": "[%key:common::state::unlocked%]"
      },
      "state_attributes": {
        "entity_id": {
          "name": "[%key:component::group::config::step::binary_sensor::data::entities%]"
        }
      }
    }
  },
  "issues": {
    "device_classes_not_matching": {
      "description": "Device classes `{device_classes}` on source entities `{source_entities}` need to be identical for sensor group `{entity_id}`.\n\nPlease correct the device classes on the source entities and reload the group sensor to fix this issue.",
      "title": "Device classes are not correct"
    },
    "state_classes_not_matching": {
      "description": "State classes `{state_classes}` on source entities `{source_entities}` need to be identical for sensor group `{entity_id}`.\n\nPlease correct the state classes on the source entities and reload the group sensor to fix this issue.",
      "title": "State classes are not correct"
    },
    "uoms_not_matching_device_class": {
      "description": "Units of measurement `{uoms}` of input sensors `{source_entities}` are not compatible and can't be converted with the device class `{device_class}` of sensor group `{entity_id}`.\n\nPlease correct the unit of measurement on the source entities and reload the group sensor to fix this issue.",
      "title": "Units of measurement are not correct"
    },
    "uoms_not_matching_no_device_class": {
      "description": "Units of measurement `{uoms}` of input sensors `{source_entities}` are not compatible when not using a device class on sensor group `{entity_id}`.\n\nPlease correct the unit of measurement on the source entities or set a proper device class on the sensor group and reload the group sensor to fix this issue.",
      "title": "Units of measurement are not correct"
    }
  },
  "options": {
    "step": {
      "binary_sensor": {
        "data": {
          "all": "[%key:component::group::config::step::binary_sensor::data::all%]",
          "entities": "[%key:component::group::config::step::binary_sensor::data::entities%]",
          "hide_members": "[%key:component::group::config::step::binary_sensor::data::hide_members%]"
        },
        "data_description": {
          "all": "[%key:component::group::config::step::binary_sensor::data_description::all%]"
        }
      },
      "button": {
        "data": {
          "entities": "[%key:component::group::config::step::binary_sensor::data::entities%]",
          "hide_members": "[%key:component::group::config::step::binary_sensor::data::hide_members%]"
        }
      },
      "cover": {
        "data": {
          "entities": "[%key:component::group::config::step::binary_sensor::data::entities%]",
          "hide_members": "[%key:component::group::config::step::binary_sensor::data::hide_members%]"
        }
      },
      "fan": {
        "data": {
          "entities": "[%key:component::group::config::step::binary_sensor::data::entities%]",
          "hide_members": "[%key:component::group::config::step::binary_sensor::data::hide_members%]"
        }
      },
      "light": {
        "data": {
          "all": "[%key:component::group::config::step::binary_sensor::data::all%]",
          "entities": "[%key:component::group::config::step::binary_sensor::data::entities%]",
          "hide_members": "[%key:component::group::config::step::binary_sensor::data::hide_members%]"
        },
        "data_description": {
          "all": "[%key:component::group::config::step::binary_sensor::data_description::all%]"
        }
      },
      "lock": {
        "data": {
          "entities": "[%key:component::group::config::step::binary_sensor::data::entities%]",
          "hide_members": "[%key:component::group::config::step::binary_sensor::data::hide_members%]"
        }
      },
      "media_player": {
        "data": {
          "entities": "[%key:component::group::config::step::binary_sensor::data::entities%]",
          "hide_members": "[%key:component::group::config::step::binary_sensor::data::hide_members%]"
        }
      },
      "notify": {
        "data": {
          "entities": "[%key:component::group::config::step::binary_sensor::data::entities%]",
          "hide_members": "[%key:component::group::config::step::binary_sensor::data::hide_members%]"
        }
      },
      "sensor": {
        "data": {
          "device_class": "[%key:component::group::config::step::sensor::data::device_class%]",
          "entities": "[%key:component::group::config::step::binary_sensor::data::entities%]",
          "hide_members": "[%key:component::group::config::step::binary_sensor::data::hide_members%]",
          "ignore_non_numeric": "[%key:component::group::config::step::sensor::data::ignore_non_numeric%]",
          "round_digits": "[%key:component::group::config::step::sensor::data::round_digits%]",
          "state_class": "[%key:component::group::config::step::sensor::data::state_class%]",
          "type": "[%key:component::group::config::step::sensor::data::type%]",
          "unit_of_measurement": "[%key:component::group::config::step::sensor::data::unit_of_measurement%]"
        },
        "data_description": {
          "ignore_non_numeric": "[%key:component::group::config::step::sensor::data_description::ignore_non_numeric%]"
        }
      },
      "switch": {
        "data": {
          "all": "[%key:component::group::config::step::binary_sensor::data::all%]",
          "entities": "[%key:component::group::config::step::binary_sensor::data::entities%]",
          "hide_members": "[%key:component::group::config::step::binary_sensor::data::hide_members%]"
        },
        "data_description": {
          "all": "[%key:component::group::config::step::binary_sensor::data_description::all%]"
        }
      },
      "valve": {
        "data": {
          "all": "[%key:component::group::config::step::binary_sensor::data::all%]",
          "entities": "[%key:component::group::config::step::binary_sensor::data::entities%]",
          "hide_members": "[%key:component::group::config::step::binary_sensor::data::hide_members%]"
        },
        "data_description": {
          "all": "[%key:component::group::config::step::binary_sensor::data_description::all%]"
        }
      }
    }
  },
  "selector": {
    "type": {
      "options": {
        "last": "Most recently updated",
        "max": "Maximum",
        "mean": "Arithmetic mean",
        "median": "Median",
        "min": "Minimum",
        "product": "Product",
        "range": "Statistical range",
        "stdev": "Standard deviation",
        "sum": "Sum"
      }
    }
  },
  "services": {
    "reload": {
      "description": "Reloads group configuration, entities, and notify services from YAML-configuration.",
      "name": "[%key:common::action::reload%]"
    },
    "remove": {
      "description": "Removes a group.",
      "fields": {
        "object_id": {
          "description": "[%key:component::group::services::set::fields::object_id::description%]",
          "name": "[%key:component::group::services::set::fields::object_id::name%]"
        }
      },
      "name": "Remove"
    },
    "set": {
      "description": "Creates/Updates a group.",
      "fields": {
        "add_entities": {
          "description": "List of members to be added to the group. Cannot be used in combination with `Entities` or `Remove entities`.",
          "name": "Add entities"
        },
        "all": {
          "description": "Enable this option if the group should only be used when all entities are in state `on`.",
          "name": "All"
        },
        "entities": {
          "description": "List of all members in the group. Cannot be used in combination with `Add entities` or `Remove entities`.",
          "name": "Entities"
        },
        "icon": {
          "description": "Name of the icon for the group.",
          "name": "Icon"
        },
        "name": {
          "description": "Name of the group.",
          "name": "[%key:common::config_flow::data::name%]"
        },
        "object_id": {
          "description": "Object ID of this group. This object ID is used as part of the entity ID. Entity ID format: [domain].[object_id].",
          "name": "Object ID"
        },
        "remove_entities": {
          "description": "List of members to be removed from a group. Cannot be used in combination with `Entities` or `Add entities`.",
          "name": "Remove entities"
        }
      },
      "name": "Set"
    }
  },
  "title": "Group"
}
